{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/swipe.ts","src/longpress.ts","src/store.ts","src/trie.ts","src/dict.ts","src/random.ts","src/stats.ts","src/game.ts","src/ui/global.ts","src/timer.ts","src/ui/board.ts","src/ui/score.ts","src/ui/define.ts","src/ui/menu.ts","src/ui/review.ts","src/ui/settings.ts","src/ui/stats.ts","src/training.ts","src/ui/training.ts","src/ui/ui.ts","src/ui/debug.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.c29ca671.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\r\n(() => {\r\n  'use strict';\r\n\r\n  const THRESHOLD = 100;\r\n  const TIMEOUT = 500;\r\n\r\n  let downX: number | null = null;\r\n  let downY: number | null = null;\r\n  let diffX = 0;\r\n  let diffY = 0;\r\n  let timeDown: number | null = null;\r\n  let startElement: EventTarget | null = null;\r\n\r\n  if (typeof window.CustomEvent !== 'function') {\r\n    // @ts-ignore\r\n    window.CustomEvent = (event: string, params: any) => {\r\n      params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n      const e = document.createEvent('CustomEvent');\r\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n      return e;\r\n    };\r\n\r\n    // @ts-ignore\r\n    window.CustomEvent.prototype = window.Event.prototype;\r\n  }\r\n\r\n  function handleTouchEnd(e: TouchEvent) {\r\n    if (startElement !== e.target) return;\r\n\r\n    const timeDiff = Date.now() - timeDown!;\r\n    let eventType = '';\r\n\r\n    if (Math.abs(diffX) > Math.abs(diffY)) {\r\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\r\n        if (diffX > 0) {\r\n          eventType = 'swiped-left';\r\n        } else {\r\n          eventType = 'swiped-right';\r\n        }\r\n      }\r\n    } else {\r\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\r\n        if (diffY > 0) {\r\n          eventType = 'swiped-up';\r\n        } else {\r\n          eventType = 'swiped-down';\r\n        }\r\n      }\r\n    }\r\n\r\n    if (eventType) {\r\n      startElement!.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true }));\r\n    }\r\n\r\n    downX = null;\r\n    downY = null;\r\n    timeDown = null;\r\n  }\r\n\r\n  function handleTouchStart(e: TouchEvent) {\r\n    const board = document.getElementById('board');\r\n    if (board && board.contains(e.target! as Node)) return;\r\n\r\n    startElement = e.target;\r\n\r\n    timeDown = Date.now();\r\n    downX = e.touches[0].clientX;\r\n    downY = e.touches[0].clientY;\r\n    diffX = 0;\r\n    diffY = 0;\r\n  }\r\n\r\n  function handleTouchMove(e: TouchEvent) {\r\n    if (!downX || !downY) return;\r\n    diffX = downX - e.touches[0].clientX;\r\n    diffY = downY - e.touches[0].clientY;\r\n  }\r\n\r\n  document.addEventListener('touchstart', handleTouchStart, false);\r\n  document.addEventListener('touchmove', handleTouchMove, false);\r\n  document.addEventListener('touchend', handleTouchEnd, false);\r\n})();\r\n","/*! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/long-press-event */\r\n(() => {\r\n  'use strict';\r\n  const TOUCH =\r\n    'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n\r\n  const mouseDown = TOUCH ? 'touchstart' : 'mousedown';\r\n  const mouseUp = TOUCH ? 'touchend' : 'mouseup';\r\n  const mouseMove = TOUCH ? 'touchmove' : 'mousemove';\r\n\r\n  const MAX_DIFF = 10;\r\n  const TIMEOUT = 500;\r\n\r\n  let timer: { value: number } | null = null;\r\n  let startX = 0;\r\n  let startY = 0;\r\n\r\n  if (typeof window.CustomEvent !== 'function') {\r\n    // @ts-ignore\r\n    window.CustomEvent = (event: string, params: any) => {\r\n      params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n      const e = document.createEvent('CustomEvent');\r\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n      return e;\r\n    };\r\n\r\n    // @ts-ignore\r\n    window.CustomEvent.prototype = window.Event.prototype;\r\n  }\r\n\r\n  function isTouch(e: MouseEvent | TouchEvent): e is TouchEvent {\r\n    return 'touches' in e;\r\n  }\r\n\r\n  function fireLongPressEvent(element: EventTarget, e: MouseEvent | TouchEvent) {\r\n    clearLongPressTimer(e);\r\n\r\n    const clientX = isTouch(e) ? e.touches[0].clientX : e.clientX;\r\n    const clientY = isTouch(e) ? e.touches[0].clientY : e.clientY;\r\n\r\n    const longPress = element.dispatchEvent(\r\n      new CustomEvent('long-press', {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail: { clientX, clientY },\r\n      })\r\n    );\r\n\r\n    if (longPress) {\r\n      document.addEventListener(\r\n        mouseUp,\r\n        e => {\r\n          e.stopImmediatePropagation();\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n\r\n          element.dispatchEvent(\r\n            new CustomEvent('long-press-up', {\r\n              bubbles: true,\r\n              cancelable: true,\r\n              detail: { clientX, clientY },\r\n            })\r\n          );\r\n        },\r\n        { once: true, capture: true }\r\n      );\r\n    }\r\n  }\r\n\r\n  function startLongPressTimer(e: MouseEvent | TouchEvent) {\r\n    clearLongPressTimer(e);\r\n\r\n    const start = new Date().getTime();\r\n    const loop = () => {\r\n      const current = new Date().getTime();\r\n      const delta = current - start;\r\n\r\n      const timeout = (e.target as HTMLElement)?.id === 'title' ? TIMEOUT * 10 : TIMEOUT;\r\n      if (delta >= timeout) {\r\n        fireLongPressEvent(e.target!, e);\r\n      } else {\r\n        timer!.value = window.requestAnimationFrame(loop);\r\n      }\r\n    };\r\n\r\n    timer = { value: window.requestAnimationFrame(loop) };\r\n  }\r\n\r\n  function clearLongPressTimer(e: Event) {\r\n    if (timer) window.cancelAnimationFrame(timer.value);\r\n    timer = null;\r\n  }\r\n\r\n  function mouseDownHandler(e: MouseEvent | TouchEvent) {\r\n    const board = document.getElementById('board');\r\n    if (board && board.contains(e.target! as Node)) return;\r\n\r\n    startX = isTouch(e) ? e.touches[0].clientX : e.clientX;\r\n    startY = isTouch(e) ? e.touches[0].clientY : e.clientY;\r\n    startLongPressTimer(e);\r\n  }\r\n\r\n  function mouseMoveHandler(e: MouseEvent | TouchEvent) {\r\n    const diffX = Math.abs(startX - (isTouch(e) ? e.touches[0].clientX : e.clientX));\r\n    const diffY = Math.abs(startY - (isTouch(e) ? e.touches[0].clientY : e.clientY));\r\n    if (diffX >= MAX_DIFF || diffY >= MAX_DIFF) clearLongPressTimer(e);\r\n  }\r\n\r\n  document.addEventListener(mouseUp, clearLongPressTimer, true);\r\n  document.addEventListener(mouseMove, mouseMoveHandler, true);\r\n  document.addEventListener('wheel', clearLongPressTimer, true);\r\n  document.addEventListener('scroll', clearLongPressTimer, true);\r\n\r\n  document.addEventListener(mouseDown, mouseDownHandler, true);\r\n})();\r\n","export class Store {\r\n  private readonly db: Promise<IDBDatabase>;\r\n\r\n  static async setup(dbName = 'keyval', storeNames = ['keyval']) {\r\n    return new Promise((resolve, reject) => {\r\n      const openreq = indexedDB.open(dbName, 1);\r\n      openreq.onerror = () => reject(openreq.error);\r\n      openreq.onsuccess = () => resolve(openreq.result);\r\n      openreq.onupgradeneeded = () => {\r\n        for (const storeName of storeNames) {\r\n          openreq.result.createObjectStore(storeName);\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  constructor(dbName = 'keyval', readonly storeName = 'keyval') {\r\n    this.db = new Promise((resolve, reject) => {\r\n      const openreq = indexedDB.open(dbName, 1);\r\n      openreq.onerror = () => reject(openreq.error);\r\n      openreq.onsuccess = () => resolve(openreq.result);\r\n\r\n      // First time setup: create an empty object store\r\n      openreq.onupgradeneeded = () => {\r\n        openreq.result.createObjectStore(storeName);\r\n      };\r\n    });\r\n  }\r\n\r\n  get<T>(key: string): Promise<T> {\r\n    let req: IDBRequest;\r\n    return this.withIDBStore('readonly', store => {\r\n      req = store.get(key);\r\n    }).then(() => req.result);\r\n  }\r\n\r\n  set<T>(key: string, value: T): Promise<void> {\r\n    return this.withIDBStore('readwrite', store => {\r\n      store.put(value, key);\r\n    });\r\n  }\r\n\r\n  private withIDBStore(\r\n    type: IDBTransactionMode,\r\n    callback: (store: IDBObjectStore) => void\r\n  ): Promise<void> {\r\n    return this.db.then(\r\n      db =>\r\n        new Promise<void>((resolve, reject) => {\r\n          const transaction = db.transaction(this.storeName, type);\r\n          transaction.oncomplete = () => resolve();\r\n          transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n          callback(transaction.objectStore(this.storeName));\r\n        })\r\n    );\r\n  }\r\n}\r\n","import { Dictionary } from './dict';\r\n\r\nexport class Trie {\r\n  parent: Trie | null;\r\n  children: Trie[];\r\n  isWord: string | boolean;\r\n\r\n  private constructor(parent: Trie | null, value: string) {\r\n    this.parent = parent;\r\n    this.children = new Array(26);\r\n    this.isWord = false;\r\n    if (parent !== null) parent.children[value.charCodeAt(0) - 65] = this;\r\n  }\r\n\r\n  static create(dict: Dictionary) {\r\n    const root = new Trie(null, '');\r\n    for (const word in dict) {\r\n      let current = root;\r\n      for (let i = 0; i < word.length; i++) {\r\n        const letter = word[i];\r\n        const ord = letter.charCodeAt(0);\r\n        let next = current.children[ord - 65];\r\n        if (next === undefined) next = new Trie(current, letter);\r\n        current = next;\r\n      }\r\n      current.isWord = dict[word].dict || true;\r\n    }\r\n    return root;\r\n  }\r\n}\r\n","export interface Dictionary {\r\n  [word: string]: Entry;\r\n}\r\n\r\nexport interface Entry {\r\n  defn: string;\r\n\r\n  freq?: number;\r\n  dict?: string;\r\n\r\n  n?: number;\r\n  o?: number;\r\n  b?: number;\r\n}\r\n\r\nexport type Type = 'NWL' | 'ENABLE' | 'CSW';\r\n\r\n// TODO: linkify? recurse?\r\nexport function define(word: string, dict: Dictionary) {\r\n  const val = dict[word];\r\n  if (!val) return '';\r\n  const re = /[{<](.*?)?=.*?[>}]/g;\r\n  let def = dict[word].defn;\r\n  if (!def) return '';\r\n  const match = re.exec(def);\r\n  if (match) {\r\n    const m = dict[match[1].toUpperCase()];\r\n    if (!m || !m.defn) {\r\n      def = match[1];\r\n    } else {\r\n      def = `${match[1]} (${m.defn})`;\r\n    }\r\n  }\r\n  return def\r\n    .replace(/\\{(.*?)=.*?\\}/g, '$1')\r\n    .replace(/<(.*?)=.*?>/g, '$1')\r\n    .replace(/\\s*?\\[.*?\\]\\s*?/g, '');\r\n}\r\n\r\nexport function isValid(word: string, dict: Dictionary, type: Type) {\r\n  const val = dict[word];\r\n  return val && (!val.dict || val.dict.includes(type.charAt(0)));\r\n}\r\n\r\nexport function order(words: string[]) {\r\n  const ordered = [];\r\n\r\n  const anadromes = new Set();\r\n  for (const w of words) {\r\n    // prettier-ignore\r\n    const r = w.split('').reverse().join('');\r\n    if (r !== w && words.includes(r)) {\r\n      const key = `${[w, r].sort().join(' ')}`;\r\n      if (!anadromes.has(key)) {\r\n        anadromes.add(key);\r\n        ordered.push(`(${w}`, `${r})`);\r\n      }\r\n    } else {\r\n      ordered.push(w);\r\n    }\r\n  }\r\n  return ordered;\r\n}\r\n","export class Random {\r\n  /* private */ seed: number;\r\n\r\n  constructor(n = 4 /* https://xkcd.com/221/ */) {\r\n    // Hash: https://burtleburtle.net/bob/hash/integer.html\r\n    n = n ^ 61 ^ (n >>> 16);\r\n    n = n + (n << 3);\r\n    n = n ^ (n >>> 4);\r\n    n = Math.imul(n, 0x27d4eb2d);\r\n    n = n ^ (n >>> 15);\r\n    this.seed = n >>> 0;\r\n  }\r\n\r\n  // Mulberry32: https://gist.github.com/tommyettinger/46a874533244883189143505d203312c\r\n  next(min?: number, max?: number) {\r\n    if (min) min = Math.floor(min);\r\n    if (max) max = Math.floor(max);\r\n\r\n    let z = (this.seed += 0x6d2b79f5 | 0);\r\n    z = Math.imul(z ^ (z >>> 15), z | 1);\r\n    z = z ^ (z + Math.imul(z ^ (z >>> 7), z | 61));\r\n    z = (z ^ (z >>> 14)) >>> 0;\r\n    const n = z / 2 ** 32;\r\n\r\n    if (min === undefined) return n;\r\n    if (!max) return Math.floor(n * min);\r\n    return Math.floor(n * (max - min)) + min;\r\n  }\r\n\r\n  shuffle<T>(arr: T[]) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(this.next() * (i + 1));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  sample<T>(arr: T[], remove = false) {\r\n    if (arr.length === 0) throw new RangeError('Cannot sample an empty array');\r\n    const index = this.next(arr.length);\r\n    const val = arr[index];\r\n    if (remove) {\r\n      arr[index] = arr[arr.length - 1];\r\n      arr.pop();\r\n    }\r\n    if (val === undefined && !Object.prototype.hasOwnProperty.call(arr, index)) {\r\n      throw new RangeError(`Cannot sample a sparse array`);\r\n    }\r\n    return val;\r\n  }\r\n}\r\n","import { Dice } from './settings';\nimport { Dictionary, Type, isValid, order } from './dict';\n\nexport interface Data {\n  New: DiceEntry;\n  Old: DiceEntry;\n  Big: DiceEntry;\n  freqs: number[];\n  total: number;\n}\n\ninterface DiceEntry {\n  NWL: TypeEntry;\n  ENABLE: TypeEntry;\n  CSW: TypeEntry;\n}\n\ninterface TypeEntry {\n  words: number[];\n  anagrams: number[];\n  total: number;\n}\n\nexport type Grade = 'A' | 'B' | 'C' | 'D' | ' ';\n\nexport class Stats {\n  private readonly dict: Dictionary;\n  private readonly percentiles: Data;\n  // NOTE: contains ALL words!\n  readonly mixed: { [anagram: string]: string[] };\n\n  constructor(percentiles: Data, dict: Dictionary) {\n    this.dict = dict;\n    this.percentiles = percentiles;\n\n    this.mixed = {};\n    for (const word in dict) {\n      const anagram = Stats.toAnagram(word);\n      this.mixed[anagram] = this.mixed[anagram] || [];\n      this.mixed[anagram].push(word);\n    }\n  }\n\n  anagrams(word: string, type: Type, min?: number) {\n    const a = Stats.toAnagram(word);\n    const group = this.mixed[a];\n\n    const result: { words: string[]; n?: number; o?: number; b?: number } = { words: [] };\n    if (!group) return result;\n\n    for (const w of group) {\n      if (min && w.length < min) continue;\n      if (isValid(w, this.dict, type)) {\n        result.words.push(w);\n        const v = this.dict[w];\n        for (const d of ['n', 'o', 'b'] as Array<'n' | 'o' | 'b'>) {\n          if (v[d]) result[d] = (result[d] || 0) + v[d]!;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  stats(word: string, dice: Dice = 'New', type: Type = 'CSW') {\n    const val = this.dict[word];\n    const a = this.anagrams(word, type);\n    if (!isValid(word, this.dict, type) || !a.words.length) {\n      return { grade: ' ' as Grade };\n    }\n\n    const pf = val.freq === undefined ? -1 : this.percentiles.freqs.findIndex(v => v <= val.freq!);\n    const f = pf === -1 ? ' ' : gradeFreq(pf);\n\n    const s = (this.percentiles[dice] as DiceEntry)[type];\n    const d = dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\n\n    const vw = val[d] || 0;\n    const pw = s.words.findIndex((v: number) => v <= vw);\n    const rw = rank(pw);\n\n    const va = a[d] || 0;\n    const pa = s.anagrams.findIndex((v: number) => v <= va);\n    const ra = rank(pa);\n\n    const g = [' ', 'A', 'B', 'C', 'D'][Math.ceil((rw + ra) / 2)] as Grade;\n\n    const pct = (v: number) => Math.round(((100 * v) / s.total) * 1000) / 1000;\n    const result: {\n      grade: Grade;\n      freq?: number;\n      word?: { p: number; v: number };\n      anagram?: { p: number; v: number };\n    } = { grade: g < f ? f : g };\n    if (pf > -1) result.freq = pf;\n    if (pw > -1) result.word = { p: pw, v: pct(val.freq!) };\n    if (pa > -1) result.anagram = { p: pa, v: pct(va) };\n    return result;\n  }\n\n  history(games: Array<[{ [w: string]: any }, Set<string>]>, dice: Dice, type: Type) {\n    const d = dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\n    // prettier-ignore\n    const reverse = (w: string) => w.split('').reverse().join('');\n\n    const ratio: { [k: string]: number } = {};\n    const anadromes: { [k: string]: number } = {};\n    const anagrams: { [k: string]: number } = {};\n\n    const all: { [k: string]: number } = {};\n    const either: { [k: string]: number } = {};\n    const found: { [k: string]: number } = {};\n    let n = games.length;\n    for (const [possible, played] of games) {\n      const as: { [k: string]: string[] } = {};\n      for (const w in possible) {\n        all[w] = (all[w] || 0) + 1;\n        const a = Stats.toAnagram(w);\n        as[a] = as[a] || [];\n        as[a].push(w);\n\n        if (played.has(w)) {\n          found[w] = (found[w] || 0) + 1;\n\n          const r = reverse(w);\n          if (r !== w && possible[r]) {\n            const k = [w, r].sort()[0];\n            if (!played.has(r)) {\n              either[k] = (either[k] || 0) + 1;\n              // FIXME: why does this not remove NOD/DON in Big dice?\n              anadromes[k] = (anadromes[w] || 0) + (1 / n) * this.dict[k][d]!;\n            } else if (w === k) {\n              either[k] = (either[k] || 0) + 1;\n            }\n          }\n        } else {\n          ratio[w] = (ratio[w] || 0) + (1 / n) * this.dict[w][d]!;\n        }\n      }\n\n      for (const a in as) {\n        const group = as[a];\n        if (group.length <= 1) continue;\n        const f = group.filter(w => played.has(w)).length / group.length;\n        if (!f) continue;\n        const w = group.reduce((acc, w) => acc + this.dict[w][d]!, 0) / group.length;\n        anagrams[a] = (anagrams[a] || 0) + (1 / n) * w * (1 - f);\n      }\n      n--;\n    }\n\n    const K = Math.log(games.length);\n    for (const w in all) {\n      ratio[w] += K * this.dict[w][d]! * Math.pow(1 - (found[w] || 0) / all[w], 2);\n      if (anadromes[w]) {\n        const r = reverse(w);\n        const [a, b] = (found[r] || 0) > (found[w] || 0) ? [w, r] : [r, w];\n        anadromes[w] += K * this.dict[w][d]! * 2 * Math.pow(1 - (found[a] || 0) / (all[b] || 1), 2);\n      }\n\n      const a = Stats.toAnagram(w);\n      if (anagrams[a] && all[w]) {\n        anagrams[w] += K * this.dict[w][d]! * Math.pow(1 - (found[w] || 0) / all[w], 2);\n      }\n    }\n\n    const sorted = (obj: { [k: string]: number }, limit: number) =>\n      Object.entries(obj)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, limit);\n\n    return {\n      words: sorted(ratio, 100).map(e => ({\n        w: e[0],\n        found: found[e[0]] || 0,\n        all: all[e[0]] || 0,\n      })),\n      anadromes: sorted(anadromes, 50).map(e => {\n        const k = e[0];\n        const r = reverse(k);\n        const [n, d] = (found[r] || 0) > (found[k] || 0) ? [k, r] : [r, k];\n        return { n, fn: found[n] || 0, d, fd: found[d] || 0, e: either[k] || 0 };\n      }),\n      anagrams: sorted(anagrams, 50).map(e => {\n        const group = [];\n        // FIXME: should pass in min length and 3 letter words should have B scores\n        for (const r of order(this.anagrams(e[0], type).words)) {\n          const w = r.replace(/[^A-Z]/, '');\n          group.push({ raw: r, found: found[w] || 0, all: all[w] || 0 });\n        }\n        return group;\n      }),\n    };\n  }\n\n  static toAnagram(word: string) {\n    // prettier-ignore\n    return word.split('').sort().join('');\n  }\n}\n\nfunction gradeFreq(p: number) {\n  if (p >= 99) return ' ';\n  if (p >= 20) return 'A';\n  if (p >= 10) return 'B';\n  if (p >= 5) return 'C';\n  return 'D';\n}\n\nfunction rank(p: number) {\n  if (p >= 75) return 0;\n  if (p >= 50) return 1;\n  if (p >= 25) return 2;\n  if (p >= 10) return 3;\n  return 4;\n}\n","import { Dictionary, Type, define } from './dict';\nimport { Random } from './random';\nimport { Settings, Dice, MinLength } from './settings';\nimport { Trie } from './trie';\nimport { Stats, Grade } from './stats';\n\n// prettier-ignore\nconst NEW_DICE = [\n  'AAEEGN', 'ELRTTY', 'AOOTTW', 'ABBJOO',\n  'EHRTVW', 'CIMOTU', 'DISTTY', 'EIOSST',\n  'DELRVY', 'ACHOPS', 'HIMNQU', 'EEINSU',\n  'EEGHNW', 'AFFKPS', 'HLNNRZ', 'DEILRX',\n];\n\n// prettier-ignore\nconst OLD_DICE = [\n  'AACIOT', 'AHMORS', 'EGKLUY', 'ABILTY',\n  'ACDEMP', 'EGINTV', 'GILRUW', 'ELPSTU',\n  'DENOSW', 'ACELRS', 'ABJMOQ', 'EEFHIY',\n  'EHINPS', 'DKNOTU', 'ADENVZ', 'BIFORX',\n];\n\n// prettier-ignore\nconst BIG_DICE = [\n  'AAAFRS', 'AAEEEE', 'AAFIRS', 'ADENNN', 'AEEEEM',\n  'AEEGMU', 'AEGMNN', 'AFIRSY', 'BJKQXZ', 'CCNSTW',\n  'CEIILT', 'CEILPT', 'CEIPST', 'DDLNOR', 'DHHLOR',\n  'DHHNOT', 'DHLNOR', 'EIIITT', 'EMOTTT', 'ENSSSU',\n  'FIPRSY', 'GORRVW', 'HIPRRY', 'NOOTUW', 'OOOTTU',\n];\n\nexport const SUFFIXES = ['S', 'ER', 'ED', 'ING'];\n\nexport interface GameSettings {\n  dice: Dice;\n  dict: Type;\n  min?: MinLength;\n}\n\nexport interface GameJSON {\n  seed: string;\n  start: number;\n  expired: number | null;\n  words: { [word: string]: number };\n  goal: {\n    S: number;\n    A: number;\n    B: number;\n    C: number;\n    D: number;\n  };\n}\n\nexport class Game {\n  private readonly trie: Trie;\n  private readonly dict: Dictionary;\n  private readonly stats: Stats;\n\n  private readonly dice: string[];\n\n  readonly seed: number;\n  readonly board: string[];\n  readonly random: Random;\n  readonly settings: Omit<Settings, 'grade'>;\n  readonly size: number;\n  readonly possible: { [word: string]: Array<[number, number]> };\n  readonly id: string;\n  readonly played: { [word: string]: number };\n  readonly overtime: Set<string>;\n  readonly score: { regular: number; overtime: number };\n  readonly start: number;\n\n  expired: number | null;\n  private totals_:\n    | {\n        s: number;\n        a: number;\n        b: number;\n        c: number;\n        d: number;\n        anagrams: { [anagram: string]: string[] };\n      }\n    | undefined;\n\n  constructor(\n    trie: Trie,\n    dict: Dictionary,\n    stats: Stats,\n    random: Random,\n    settings: GameSettings = { dice: 'New', dict: 'CSW' }\n  ) {\n    this.trie = trie;\n    this.dict = dict;\n    this.stats = stats;\n\n    this.dice = settings.dice === 'Big' ? BIG_DICE : settings.dice === 'Old' ? OLD_DICE : NEW_DICE;\n    this.size = Math.sqrt(this.dice.length);\n    settings.min = (settings.min || this.size - 1) as MinLength;\n    this.settings = settings as Settings;\n\n    this.random = random;\n    this.seed = this.random.seed;\n    this.board = [];\n    for (const die of this.dice) {\n      const c = this.random.sample(die.split(''));\n      this.board.push(c === 'Q' ? 'Qu' : c);\n    }\n    this.random.shuffle(this.board);\n    this.possible = this.solve();\n\n    this.id = Game.encodeID(this.settings, this.seed);\n    this.played = {};\n    this.overtime = new Set();\n    this.score = { regular: 0, overtime: 0 };\n\n    this.start = +new Date();\n    this.expired = null; // set to timestamp!\n  }\n\n  play(word: string) {\n    if (!this.played[word] && word.length >= this.settings.min) {\n      if (this.possible[word]) {\n        this.played[word] = +new Date();\n        const score = Game.score(word);\n        if (this.expired) this.overtime.add(word);\n\n        const bucket = this.expired ? 'overtime' : 'regular';\n        this.score[bucket] += score;\n        return score;\n      } else {\n        this.played[word] = -new Date();\n        if (this.expired) this.overtime.add(word);\n      }\n    }\n    return 0;\n  }\n\n  toJSON(): GameJSON {\n    return {\n      seed: this.id,\n      start: this.start,\n      expired: this.expired,\n      words: this.played,\n      goal: {\n        S: this.totals.s,\n        A: this.totals.a,\n        B: this.totals.b,\n        C: this.totals.c,\n        D: this.totals.d,\n      },\n    };\n  }\n\n  static encodeID(s: Omit<Settings, 'grade'>, seed: number) {\n    return `${s.dice.charAt(0)}${s.min}${s.dict.charAt(0)}${seed}`;\n  }\n\n  static decodeID(id: string): [Partial<GameSettings>, number] {\n    const d = id.charAt(0);\n    const dice = d === 'N' ? 'New' : d === 'O' ? 'Old' : d === 'B' ? 'Big' : undefined;\n    let min: MinLength | undefined = Number(id.charAt(1)) as MinLength;\n    if (isNaN(min) || min < 3 || min > 5) min = undefined;\n    const t = id.charAt(2);\n    const dict = t === 'N' ? 'NWL' : t === 'E' ? 'ENABLE' : t === 'C' ? 'CSW' : undefined;\n\n    const num = id.slice(3);\n    let seed = num.length ? Number(num) : NaN;\n    if (String(seed) !== num) seed = NaN;\n\n    return [{ dice, min, dict }, seed];\n  }\n\n  static fromJSON(json: GameJSON, trie: Trie, dict: Dictionary, stats: Stats) {\n    const [settings, seed] = Game.decodeID(json.seed);\n    const random = new Random();\n    random.seed = seed;\n    const game = new Game(trie, dict, stats, random, settings as GameSettings);\n\n    // @ts-ignore readonly\n    game.start = json.start;\n    // @ts-ignore readonly\n    game.expired = json.expired;\n    // @ts-ignore readonly\n    game.played = json.words;\n\n    const score = { regular: 0, overtime: 0 };\n    for (const w in game.played) {\n      if (game.played[w] < 0) continue;\n      const s = Game.score(w);\n      if (!game.expired || game.played[w] <= game.expired) {\n        score.regular += s;\n      } else {\n        score.overtime += s;\n      }\n    }\n\n    // @ts-ignore readonly\n    game.score = score;\n\n    return game;\n  }\n\n  get totals() {\n    if (this.totals_) return this.totals_;\n\n    const anagrams: { [anagram: string]: string[] } = {};\n    const grades: { [grade: string]: number } = {};\n    for (const word in this.possible) {\n      const anagram = Stats.toAnagram(word);\n      anagrams[anagram] = anagrams[anagram] || [];\n      anagrams[anagram].push(word);\n\n      const g = this.stats.stats(word, this.settings.dice, this.settings.dict).grade;\n      grades[g] = (grades[g] || 0) + Game.score(word);\n    }\n\n    const d = grades.D || 0;\n    const c = d + (grades.C || 0);\n    const b = c + (grades.B || 0);\n    const a = b + (grades.A || 0);\n    const s = a + (grades[' '] || 0);\n\n    return (this.totals_ = { s, a, b, c, d, anagrams });\n  }\n\n  progress() {\n    let total = 0;\n    let invalid = 0;\n    let valid = 0;\n    const suffixes: { [suffixed: string]: string } = {};\n    const subwords = new Set<string>();\n\n    const anagrams: { [anagram: string]: string[] } = {};\n    for (const word in this.played) {\n      total++;\n      if (this.played[word] < 0) {\n        invalid++;\n        continue;\n      }\n      valid++;\n\n      for (const suffix of SUFFIXES) {\n        let suffixed;\n        if (['ER', 'ED'].includes(suffix) && word.endsWith('E')) {\n          suffixed = `${word}${suffix.charAt(1)}`;\n        } else if (suffix === 'S' && (word.endsWith('S') || word.endsWith('X'))) {\n          suffixed = `${word}ES`;\n        } else {\n          suffixed = `${word}${suffix}`;\n        }\n        if (this.possible[suffixed] && !this.played[suffixed]) suffixes[suffixed] = word;\n      }\n\n      const anagram = Stats.toAnagram(word);\n      anagrams[anagram] = anagrams[anagram] || [];\n      anagrams[anagram].push(word);\n\n      for (const sub of subs(word, this.settings.min)) {\n        if (this.possible[sub] && !this.played[sub]) subwords.add(sub);\n      }\n    }\n\n    let missing: string[] = [];\n    for (const anagram in anagrams) {\n      missing = missing.concat(\n        this.totals.anagrams[anagram].filter(w => !anagrams[anagram].includes(w))\n      );\n    }\n\n    const words = new Set([...Object.keys(suffixes), ...subwords, ...missing]);\n    const score =\n      this.score.regular +\n      this.score.overtime +\n      Array.from(words).reduce((sum, w) => Game.score(w) + sum, 0);\n\n    return {\n      invalid,\n      valid,\n      total,\n      score,\n      suffixes,\n      subwords: subwords.size,\n      anagrams: missing.length,\n      missing: words,\n    };\n  }\n\n  state() {\n    const progress = this.progress();\n    const gr = (w: string) => this.stats.stats(w, this.settings.dice, this.settings.dict).grade;\n    // missing > grade > length > anagrams > alphabetical\n    const fn = (a: string, b: string) => {\n      const ma = progress.missing.has(a);\n      const mb = progress.missing.has(b);\n      if (ma && !mb) return -1;\n      if (mb && !ma) return 1;\n\n      const ga = gr(a);\n      const gb = gr(b);\n      if (ga > gb) return -1;\n      if (gb > ga) return 1;\n\n      if (a.length > b.length) return 1;\n      if (b.length > a.length) return -1;\n\n      return Stats.toAnagram(a).localeCompare(Stats.toAnagram(b));\n    };\n\n    const augment = (w: string) => ({\n      word: w,\n      grade: gr(w),\n      defn: define(w, this.dict),\n    });\n\n    return {\n      played: Array.from(Object.entries(this.played))\n        .sort((a, b) => Math.abs(a[1]) - Math.abs(b[1]))\n        .map(e => {\n          const w = e[0];\n          const v: {\n            word: string;\n            grade: Grade;\n            defn: string;\n            invalid?: boolean;\n            overtime?: boolean;\n          } = augment(w);\n          if (e[1] < 0) v.invalid = true;\n          if (this.overtime.has(w)) v.overtime = true;\n          return v;\n        }),\n      remaining: Object.keys(this.possible)\n        .filter(w => !this.played[w])\n        .sort(fn)\n        .map(w => {\n          const v: {\n            word: string;\n            grade: Grade;\n            defn: string;\n            missing?: boolean;\n            root?: string;\n          } = augment(w);\n          if (progress.missing.has(w)) v.missing = true;\n          if (progress.suffixes[w]) v.root = progress.suffixes[w];\n          return v;\n        }),\n      progress,\n      totals: this.totals,\n    };\n  }\n\n  solve() {\n    const words: { [word: string]: Array<[number, number]> } = {};\n    const queue: Array<[number, number, string, Trie, Array<[number, number]>]> = [];\n    for (let y = 0; y < this.size; y++) {\n      for (let x = 0; x < this.size; x++) {\n        let c = this.board[this.size * y + x];\n        const ord = c.charCodeAt(0);\n        let node = this.trie.children[ord - 65];\n        if (c === 'Qu' && node !== undefined) {\n          c = 'QU';\n          node = node.children[20]; // ('U' = 85) - 65\n        }\n        if (node !== undefined) {\n          queue.push([x, y, c, node, [[x, y]]]);\n        }\n      }\n    }\n    while (queue.length !== 0) {\n      const [x, y, s, node, h] = queue.pop()!;\n      // prettier-ignore\n      for (const [dx, dy] of [[1, 0], [1, -1], [0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1]]) {\n        const [x2, y2] = [x + dx, y + dy];\n        if (h.find(e => e[0] === x2 && e[1] === y2) !== undefined) continue;\n        if (0 <= x2 && x2 < this.size && 0 <= y2 && y2 < this.size) {\n          const hist = h.slice();\n          hist.push([x2, y2]);\n\n          let c = this.board[this.size * y2 + x2];\n          let node2 = node.children[c.charCodeAt(0) - 65];\n          if (c === 'Qu' && node2 !== undefined) {\n            c = 'QU';\n            node2 = node2.children[20]; // ('U' = 85) - 65\n          }\n          if (node2 !== undefined) {\n            const s2 = s + c;\n            const isWord = typeof node2.isWord === 'boolean' ?\n              node2.isWord : node2.isWord.includes(this.settings.dict.charAt(0));\n            if (isWord && s2.length >= this.settings.min) words[s2] = hist;\n            queue.push([x2, y2, s2, node2, hist]);\n          }\n        }\n      }\n    }\n    return words;\n  }\n\n  static score(word: string) {\n    if (word.length < 3) return 0;\n    if (word.length <= 4) return 1;\n    if (word.length === 5) return 2;\n    if (word.length === 6) return 3;\n    if (word.length === 7) return 5;\n    /* if (word.length >= 8) */ return 11;\n  }\n}\n\nfunction subs(word: string, min: number) {\n  const words = new Set<string>();\n\n  for (let b = 0; b < word.length; b++) {\n    for (let e = 1; e <= word.length - b; e++) {\n      const s = word.substr(b, e);\n      if (s.length >= min) words.add(s);\n    }\n  }\n\n  return words;\n}\n","// tslint:disable:no-var-keyword prefer-const\nimport { Store } from '../store';\nimport { Settings } from '../settings';\nimport { Trie } from '../trie';\nimport { Dictionary } from '../dict';\nimport { Game, GameJSON } from '../game';\nimport { Stats, Data } from '../stats';\n\nconst STORE = new Store('db', 'store');\nconst DEFAULTS: Settings = { dice: 'New', min: 3, dict: 'CSW', grade: 'C', display: 'Show' };\nconst fetchJSON = (url: string) => fetch(url, { mode: 'no-cors' }).then(j => j.json());\n// TODO: TRIE, STATS, GAMES, and the TrainingPool creation\n// need to be moved to a background worker and transferred in.\nexport const global: {\n  SETTINGS: Settings;\n  STORE: Store;\n  LIMIT: number;\n  MAX_SEED: number;\n  DICT: Dictionary;\n  STATS: Stats;\n  HISTORY: GameJSON[];\n  TRIE: Trie;\n  GAMES: Array<[{ [word: string]: any }, Set<string>]> | undefined;\n  PLAYED: Set<string> | undefined;\n  SEED: number;\n  LOADED: {\n    DICT: Promise<void>;\n    TRIE: () => Promise<void>;\n    STATS: () => Promise<void>;\n    HISTORY: Promise<void>;\n    TRAINING: Promise<void>;\n    GAMES: () => Promise<void>;\n    PLAYED: () => Promise<void>;\n  };\n} = {\n  SETTINGS: (JSON.parse(localStorage.getItem('settings')!) as Settings) || DEFAULTS,\n  STORE,\n  LIMIT: 500,\n  MAX_SEED: 1e12,\n  DICT: (undefined as unknown) as Dictionary,\n  STATS: (undefined as unknown) as Stats,\n  HISTORY: (undefined as unknown) as GameJSON[],\n  TRIE: (undefined as unknown) as Trie,\n  GAMES: undefined as Array<[{ [word: string]: any }, Set<string>]> | undefined,\n  PLAYED: undefined as Set<string> | undefined,\n  SEED: 0,\n  LOADED: {\n    DICT: fetchJSON('data/dict.json').then(d => {\n      global.DICT = d;\n    }),\n    TRIE: async () => {\n      if (global.TRIE) return;\n      await global.LOADED.DICT;\n      global.TRIE = Trie.create(global.DICT);\n    },\n    STATS: async () => {\n      if (global.STATS) return;\n      let stats: Data;\n      await Promise.all([\n        global.LOADED.DICT,\n        fetchJSON('data/stats.json').then(s => {\n          stats = s;\n        }),\n      ]);\n      global.STATS = new Stats(stats!, global.DICT);\n    },\n    HISTORY: STORE.get('history').then(h => {\n      global.HISTORY = (h as GameJSON[]) || [];\n    }),\n    TRAINING: Store.setup('training', ['NWL', 'ENABLE', 'CSW']) as Promise<void>,\n    GAMES: async () => {\n      if (global.GAMES) return;\n      await Promise.all([\n        global.LOADED.HISTORY,\n        global.LOADED.TRIE(),\n        global.LOADED.DICT,\n        global.LOADED.STATS(),\n      ]);\n      global.GAMES = [];\n      for (let i = global.HISTORY.length - 1; i >= 0 && global.GAMES.length < global.LIMIT; i--) {\n        const game = Game.fromJSON(global.HISTORY[i], global.TRIE, global.DICT, global.STATS);\n        const played = new Set<string>();\n        for (const w in game.played) {\n          if (game.played[w] > 0) played.add(w);\n        }\n        global.GAMES.push([game.possible, played]);\n      }\n    },\n    PLAYED: async () => {\n      if (global.PLAYED) return;\n      await global.LOADED.HISTORY;\n      global.PLAYED = new Set();\n      for (const h of global.HISTORY) global.PLAYED.add(h.seed);\n    },\n  },\n};\n","export interface TimerJSON {\r\n  duration: number;\r\n  elapsed: number;\r\n}\r\n\r\nexport class Timer {\r\n  private readonly display: HTMLElement;\r\n  private readonly duration: number;\r\n\r\n  private elapsed: number;\r\n  private interval: number | null;\r\n  private begin: number | undefined;\r\n  private last: number | undefined;\r\n  private expireFn: (() => void) | null;\r\n  private updateFn: (() => void) | null;\r\n\r\n  constructor(\r\n    display: HTMLElement,\r\n    duration: number,\r\n    elapsed = 0,\r\n    expireFn: (() => void) | null = null,\r\n    updateFn: (() => void) | null = null\r\n  ) {\r\n    this.duration = duration;\r\n    this.display = display;\r\n\r\n    this.elapsed = elapsed;\r\n    this.interval = null;\r\n    this.expireFn = expireFn;\r\n    this.updateFn = updateFn;\r\n\r\n    this.render();\r\n  }\r\n\r\n  toJSON(): TimerJSON {\r\n    return { duration: this.duration, elapsed: this.elapsed };\r\n  }\r\n\r\n  start() {\r\n    if (this.interval) return;\r\n    this.begin = new Date().getTime();\r\n    this.last = this.begin;\r\n    this.interval = setInterval(() => this.update(), 100);\r\n  }\r\n\r\n  stop() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n      this.interval = null;\r\n      this.begin = new Date().getTime();\r\n      this.elapsed += this.begin - this.last!;\r\n      this.last = this.begin;\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    if (this.interval) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  expired() {\r\n    return this.elapsed >= this.duration;\r\n  }\r\n\r\n  update() {\r\n    const now = new Date().getTime();\r\n    this.elapsed += now - this.last!;\r\n    this.last = now;\r\n\r\n    const before = this.display.textContent;\r\n    this.render();\r\n    if (before !== this.display.textContent && this.updateFn) {\r\n      this.updateFn();\r\n    }\r\n  }\r\n\r\n  private render() {\r\n    let distance;\r\n    if (this.expired()) {\r\n      this.display.classList.add('expired');\r\n      distance = this.elapsed - this.duration;\r\n      if (this.expireFn) {\r\n        this.expireFn();\r\n        this.expireFn = null;\r\n      }\r\n    } else {\r\n      this.display.classList.remove('expired');\r\n      distance = this.duration - this.elapsed;\r\n    }\r\n\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = `${Math.floor((distance % (1000 * 60)) / 1000)}`.padStart(2, '0');\r\n    this.display.textContent = `${minutes}:${seconds}`;\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { Game, GameJSON, SUFFIXES } from '../game';\r\nimport { Timer, TimerJSON } from '../timer';\r\nimport { Random } from '../random';\r\nimport { define } from '../dict';\r\n\r\nconst DURATION = 180 * 1000;\r\nconst VALID = (s: string) =>\r\n  s.split('').every(c => (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\r\n\r\ninterface BoardJSON {\r\n  last: string;\r\n  kept: boolean;\r\n  paused: boolean;\r\n  timer: TimerJSON;\r\n  game?: GameJSON;\r\n}\r\n\r\nexport class BoardView implements View {\r\n  last: string;\r\n  kept: boolean;\r\n  paused: boolean;\r\n  timer: Timer;\r\n  game: GameJSON | Game | undefined;\r\n\r\n  played!: Set<string>;\r\n\r\n  timerDisplay: HTMLElement;\r\n  container!: HTMLElement;\r\n  score!: HTMLElement;\r\n  full!: HTMLElement;\r\n  word!: HTMLElement;\r\n  defn!: HTMLElement;\r\n  tds!: Set<HTMLTableCellElement>;\r\n\r\n  constructor(json?: BoardJSON) {\r\n    this.last = json ? json.last : '';\r\n    this.kept = json ? json.kept : false;\r\n    this.game = json ? json.game : undefined;\r\n    this.paused = json ? json.paused : false;\r\n    const { display, timer } = this.createTimer(json && json.timer);\r\n    this.timer = timer;\r\n    this.timerDisplay = display;\r\n    document.addEventListener('visibilitychange', e => {\r\n      if (document.hidden) {\r\n        this.timer.stop();\r\n      } else if (!this.paused) {\r\n        this.timer.start();\r\n      }\r\n    });\r\n  }\r\n\r\n  toJSON(): BoardJSON {\r\n    return {\r\n      last: this.last,\r\n      kept: this.kept,\r\n      paused: this.paused,\r\n      timer: this.timer.toJSON(),\r\n      game: this.game && ('random' in this.game ? this.game.toJSON() : this.game),\r\n    };\r\n  }\r\n\r\n  async init(data: { new?: boolean; allowDupes?: boolean } = {}) {\r\n    await Promise.all([\r\n      global.LOADED.DICT,\r\n      global.LOADED.TRIE(),\r\n      global.LOADED.STATS(),\r\n      global.LOADED.HISTORY,\r\n      global.LOADED.PLAYED(),\r\n    ]);\r\n\r\n    if (!this.game || data.new) {\r\n      let seed = global.SEED;\r\n      if (this.game) {\r\n        this.timer.stop();\r\n        if (!('random' in this.game)) {\r\n          this.game = Game.fromJSON(this.game, global.TRIE, global.DICT, global.STATS);\r\n        }\r\n        if (this.game.seed === seed) seed = this.game.random.seed % global.MAX_SEED;\r\n        global.PLAYED!.add(this.game.id);\r\n        if (Object.values(this.game.played).filter(t => t > 0).length) {\r\n          this.updateGames();\r\n          global.HISTORY.push(this.game.toJSON());\r\n          await global.STORE.set('history', global.HISTORY);\r\n        }\r\n      }\r\n\r\n      let game;\r\n      const random = new Random();\r\n      while (!game || !Object.keys(game.possible).length) {\r\n        random.seed = seed;\r\n        const id = Game.encodeID(global.SETTINGS, random.seed);\r\n        if (global.PLAYED!.has(id) && !data.allowDupes) {\r\n          seed = (seed + 1) % global.MAX_SEED;\r\n          continue;\r\n        }\r\n        game = new Game(global.TRIE, global.DICT, global.STATS, random, global.SETTINGS);\r\n      }\r\n      this.game = game;\r\n      global.SEED = seed;\r\n\r\n      const { display, timer } = this.createTimer();\r\n      this.timer = timer;\r\n      this.timerDisplay = display;\r\n\r\n      this.last = '';\r\n      this.kept = false;\r\n      this.paused = false;\r\n    } else if (!('random' in this.game)) {\r\n      this.game = Game.fromJSON(this.game, global.TRIE, global.DICT, global.STATS);\r\n    }\r\n\r\n    const hash = `#${(this.game as Game).id}`;\r\n    if (document.location.hash !== hash) {\r\n      window.history.replaceState(null, '', hash);\r\n    }\r\n\r\n    if (!this.full) this.full = UI.createElementWithId('div', 'full');\r\n    if (!this.score) {\r\n      this.score = UI.createElementWithId('div', 'score');\r\n      this.displayScore();\r\n    }\r\n  }\r\n\r\n  async attach(data: { new?: boolean; allowDupes?: boolean } = {}) {\r\n    await this.init(data);\r\n\r\n    this.container = UI.createElementWithId('div', 'game');\r\n\r\n    const touch =\r\n      'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n\r\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\r\n    back.addEventListener('long-press', e => {\r\n      if (touch) e.preventDefault();\r\n      return this.refresh({ new: true });\r\n    });\r\n\r\n    const score = UI.createElementWithId('div', 'score-wrapper');\r\n    score.appendChild(this.score);\r\n    score.addEventListener('mouseup', () => UI.toggleView('Score'));\r\n    score.addEventListener('long-press', () => this.onLongPress());\r\n    score.addEventListener('long-press-up', () => this.onLongPressUp());\r\n\r\n    this.container.appendChild(UI.createTopbar(back, this.timerDisplay, score));\r\n    this.container.appendChild(this.full);\r\n    this.container.appendChild(this.renderBoard());\r\n    this.displayScore();\r\n\r\n    this.word = UI.createElementWithId('div', 'word');\r\n    this.word.classList.add('word');\r\n    this.word.addEventListener('beforeinput', e => this.onBeforeInput(e));\r\n\r\n    if (!touch) this.word.contentEditable = 'true';\r\n    this.container.appendChild(this.word);\r\n    this.defn = UI.createElementWithId('div', 'defn');\r\n    this.defn.classList.add('definition');\r\n    this.container.appendChild(this.defn);\r\n\r\n    if (!this.paused) this.timer.start();\r\n    return this.container;\r\n  }\r\n\r\n  renderBoard() {\r\n    const game = this.game as Game;\r\n    const content = UI.createElementWithId('div', 'board-wrapper');\r\n    const table = UI.createElementWithId('table', 'board');\r\n    if (game.size > 4) table.classList.add('big');\r\n\r\n    this.tds = new Set();\r\n    const random = new Random(game.seed);\r\n    for (let row = 0; row < game.size; row++) {\r\n      const tr = document.createElement('tr');\r\n      for (let col = 0; col < game.size; col++) {\r\n        const td = document.createElement('td');\r\n\r\n        const text = document.createElement('div');\r\n        text.textContent = game.board[row * game.size + col];\r\n        if (text.textContent === 'Qu') text.classList.add('qu');\r\n        if (['M', 'W', 'Z'].includes(text.textContent)) text.classList.add('underline');\r\n        \r\n        if (global.SETTINGS.rotate === true) {\r\n          text.classList.add(`rotate${90 * random.next(0, 4)}`);\r\n        }\r\n        td.setAttribute('data-x', String(row));\r\n        td.setAttribute('data-y', String(col));\r\n        td.appendChild(text);\r\n\r\n        const div = document.createElement('div');\r\n        div.classList.add('target');\r\n        div.setAttribute('data-x', String(row));\r\n        div.setAttribute('data-y', String(col));\r\n\r\n        td.appendChild(div);\r\n        tr.appendChild(td);\r\n        this.tds.add(td);\r\n      }\r\n      table.appendChild(tr);\r\n    }\r\n\r\n    let touched = new Set<HTMLTableCellElement>();\r\n    const deselect = () => {\r\n      for (const td of touched) td.classList.remove('selected');\r\n    };\r\n\r\n    const registerTouch = (e: TouchEvent) => {\r\n      const touch = e.touches[0];\r\n      const cell = document.elementFromPoint(touch.clientX, touch.clientY);\r\n      if (cell && cell.matches('.target')) {\r\n        const td = cell.parentNode as HTMLTableCellElement;\r\n        td.classList.add('selected');\r\n        if (!touched.has(td)) {\r\n          touched.add(td);\r\n          this.word.textContent += td.textContent!;\r\n        }\r\n      }\r\n    };\r\n\r\n    table.addEventListener('touchstart', e => {\r\n      this.clear();\r\n      deselect();\r\n      touched = new Set();\r\n\r\n      registerTouch(e);\r\n    });\r\n    table.addEventListener('touchend', () => {\r\n      deselect();\r\n      this.play();\r\n    });\r\n    table.addEventListener('touchmove', registerTouch);\r\n\r\n    content.appendChild(table);\r\n    return content;\r\n  }\r\n\r\n  afterAttach() {\r\n    UI.permaFocus(this.word);\r\n  }\r\n\r\n  detach(next: string) {\r\n    if (!['Score', 'Define'].includes(next)) this.timer.stop();\r\n    return this.container;\r\n  }\r\n\r\n  async refresh(data: { new?: boolean; allowDupes?: boolean } = {}) {\r\n    UI.persist();\r\n    await UI.detachView('Board', 'Board');\r\n    await UI.attachView('Board', data);\r\n  }\r\n\r\n  play() {\r\n    const game = this.game as Game;\r\n    let w = (this.word.textContent || '').toUpperCase();\r\n    if (!w.length) return;\r\n    if (w.length < 3 || SUFFIXES.includes(w)) {\r\n      w = `${this.last}${w}`;\r\n      this.word.textContent = w;\r\n    }\r\n    const score = game.play(w);\r\n    this.last = w;\r\n    UI.persist();\r\n\r\n    const hide = global.SETTINGS.display === 'Hide';\r\n    this.kept = true;\r\n    if (!hide && score) {\r\n      this.displayScore();\r\n      this.defn.textContent = define(w, global.DICT);\r\n    } else {\r\n      const original = this.word.textContent || undefined;\r\n      if (!hide && game.played[w] < 0) this.word.classList.add('error');\r\n      this.word.classList.add('fade');\r\n      this.word.addEventListener('animationend', () => this.clear(original), { once: true });\r\n    }\r\n  }\r\n\r\n  displayScore() {\r\n    const game = this.game as Game;\r\n    if (global.SETTINGS.display === 'Hide') {\r\n      this.score.textContent = '?';\r\n      this.full.classList.add('hidden');\r\n      return;\r\n    }\r\n\r\n    if (global.SETTINGS.display === 'Full') {\r\n      const state = game.state();\r\n      const p = state.progress;\r\n      const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams}`;\r\n      const score = game.score.regular + game.score.overtime;\r\n      const goal = state.totals[global.SETTINGS.grade.toLowerCase() as 'a' | 'b' | 'c' | 'd'];\r\n      const pct = Math.round((score / goal) * 100).toFixed(0);\r\n      this.full.classList.remove('hidden');\r\n      this.full.textContent = `${details} - ${score}/${goal} (${pct}%)`;\r\n    } else {\r\n      this.full.classList.add('hidden');\r\n    }\r\n\r\n    const s = game.score;\r\n    this.score.textContent = s.overtime ? `${s.regular}\\xA0/\\xA0${s.overtime}` : `${s.regular}`;\r\n  }\r\n\r\n  clear(w?: string) {\r\n    if (w && w !== this.word.textContent) return;\r\n    this.word.textContent = '';\r\n    this.word.classList.remove('error');\r\n    this.word.classList.remove('fade');\r\n    this.defn.textContent = '';\r\n    this.kept = false;\r\n  }\r\n\r\n  createTimer(json?: TimerJSON) {\r\n    const display = UI.createElementWithId('div', 'timer');\r\n    display.addEventListener('click', () => {\r\n      this.timer.toggle();\r\n      this.paused = !this.paused;\r\n    });\r\n    const duration = json ? json.duration : DURATION;\r\n    const elapsed = json ? json.elapsed : 0;\r\n    const expire = () => {\r\n      if (this.game && !this.game.expired) {\r\n        this.game.expired = +new Date();\r\n      }\r\n    };\r\n    const timer = new Timer(display, duration, elapsed, expire, () => UI.persist());\r\n    return { display, timer };\r\n  }\r\n\r\n  updateGames() {\r\n    if (!global.GAMES) return;\r\n\r\n    const game = this.game as Game;\r\n    const played = new Set<string>();\r\n    for (const w in game.played) {\r\n      if (game.played[w] > 0) played.add(w);\r\n    }\r\n    if (!played.size) return;\r\n\r\n    if (global.GAMES.length >= global.LIMIT) global.GAMES.shift();\r\n    global.GAMES.push([game.possible, played]);\r\n  }\r\n\r\n  onLongPress() {\r\n    const game = this.game as Game;\r\n    const size = game.size;\r\n    const weights = [];\r\n    for (let row = 0; row < size; row++) {\r\n      const a = [];\r\n      for (let col = 0; col < size; col++) {\r\n        a.push(0);\r\n      }\r\n      weights.push(a);\r\n    }\r\n    let total = 0;\r\n    for (const word in game.possible) {\r\n      if (game.played[word]) continue;\r\n      const score = Game.score(word);\r\n      total += score;\r\n      for (const p of game.possible[word]) {\r\n        weights[p[1]][p[0]] += score;\r\n      }\r\n    }\r\n\r\n    for (const td of this.tds) {\r\n      const w = weights[Number(td.dataset.x)][Number(td.dataset.y)] / total;\r\n      td.style.backgroundColor = `rgba(255,0,0,${w})`;\r\n    }\r\n  }\r\n\r\n  onLongPressUp() {\r\n    for (const td of this.tds) {\r\n      td.style.removeProperty('background-color');\r\n    }\r\n  }\r\n\r\n  async onBeforeInput(e: any) {\r\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\r\n    e.preventDefault();\r\n    const enter = ['insertLineBreak', 'insertParagraph'].includes(e.inputType);\r\n    if (enter || (e.data && e.data.includes(' '))) {\r\n      this.play();\r\n      UI.focusContentEditable(this.word);\r\n    }\r\n  }\r\n\r\n  async onKeyDown(e: KeyboardEvent) {\r\n    if (!this.word) return; // not attached\r\n    if (this.kept) this.clear();\r\n    UI.focusContentEditable(this.word);\r\n    // tslint:disable-next-line: deprecation\r\n    const key = e.keyCode;\r\n    if (key === 13 || key === 32) {\r\n      e.preventDefault();\r\n      this.play();\r\n      UI.focusContentEditable(this.word);\r\n    } else if (![0, 37, 39, 8, 46].includes(key) && !VALID(String.fromCharCode(key))) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { UI } from './ui';\r\nimport { BoardView } from './board';\r\nimport { Game } from '../game';\r\n\r\nexport class ScoreView {\r\n  private readonly board: BoardView;\r\n\r\n  container!: HTMLElement;\r\n\r\n  constructor(board: BoardView) {\r\n    this.board = board;\r\n  }\r\n\r\n  toJSON() {}\r\n\r\n  async attach() {\r\n    await this.board.init();\r\n\r\n    this.container = UI.createElementWithId('div', 'game');\r\n\r\n    // TODO: wrapper should really be container, not game\r\n    const wrapper = UI.createElementWithId('div', 'score-history');\r\n\r\n    const back = UI.createBackButton(() => UI.toggleView('Board'));\r\n    this.container.appendChild(UI.createTopbar(back, this.board.timerDisplay, this.board.score));\r\n\r\n    const game = this.board.game as Game;\r\n    const state = game.state();\r\n    const score = game.score.regular + game.score.overtime;\r\n    const goal = state.totals[global.SETTINGS.grade.toLowerCase() as 'a' | 'b' | 'c' | 'd'];\r\n    const details = `${score}/${goal} (${Math.round((score / goal) * 100).toFixed(0)}%)`;\r\n    const current = makeCollapsible(game.id, details, 'block');\r\n    const div = document.createElement('div');\r\n    div.classList.add('collapsible-content');\r\n    this.displayPlayed(state, div, true);\r\n    this.displayPossible(state, div);\r\n    wrapper.appendChild(current);\r\n    wrapper.appendChild(div);\r\n    // Start off with played expanded\r\n    current.classList.add('active');\r\n    div.style.display = 'block';\r\n\r\n    for (let i = global.HISTORY.length - 1; i >= 0; i--) {\r\n      const state = global.HISTORY[i];\r\n      let score = 0;\r\n      for (const [w, t] of Object.entries(state.words)) {\r\n        if (t > 0) score += Game.score(w);\r\n      }\r\n      if (!score) continue;\r\n\r\n      const details = `${score}/${state.goal[global.SETTINGS.grade]} (${Math.round(\r\n        (score / state.goal[global.SETTINGS.grade]) * 100\r\n      ).toFixed(0)}%)`;\r\n      const div = document.createElement('div');\r\n      div.classList.add('collapsible-content');\r\n      div.classList.add('lazy');\r\n      const button = makeCollapsible(state.seed, details, 'block', () => {\r\n        if (div.classList.contains('lazy')) {\r\n          div.classList.remove('lazy');\r\n          const game = Game.fromJSON(state, global.TRIE, global.DICT, global.STATS);\r\n          const s = game.state();\r\n          this.displayPlayed(s, div);\r\n          this.displayPossible(s, div);\r\n        }\r\n      });\r\n      wrapper.appendChild(button);\r\n      wrapper.appendChild(div);\r\n    }\r\n\r\n    this.container.appendChild(wrapper);\r\n\r\n    return this.container;\r\n  }\r\n\r\n  detach() {\r\n    return this.container;\r\n  }\r\n\r\n  displayPlayed(state: ReturnType<Game['state']>, div: HTMLElement, expanded = false) {\r\n    const p = state.progress;\r\n    const details = `(${p.score}) ${Object.keys(p.suffixes).length}/${p.subwords}/${p.anagrams} (${\r\n      p.invalid\r\n    }/${p.total})`;\r\n\r\n    const button = makeCollapsible('PLAYED', details, 'table');\r\n\r\n    const table = document.createElement('table');\r\n    table.classList.add('collapsible-content');\r\n    table.classList.add('results');\r\n    table.classList.add('played');\r\n\r\n    for (const { word, grade, overtime, defn, invalid } of state.played) {\r\n      const tr = document.createElement('tr');\r\n      if (grade < global.SETTINGS.grade) tr.classList.add('hard');\r\n      if (invalid) tr.classList.add('error');\r\n      if (overtime) tr.classList.add('overtime');\r\n\r\n      let td = document.createElement('td');\r\n      const b = document.createElement('b');\r\n      b.textContent = word;\r\n      td.appendChild(b);\r\n      tr.appendChild(td);\r\n\r\n      td = document.createElement('td');\r\n      if (defn) td.textContent = defn;\r\n      tr.appendChild(td);\r\n\r\n      table.appendChild(tr);\r\n    }\r\n\r\n    if (expanded) {\r\n      button.classList.add('active');\r\n      table.style.display = 'table';\r\n    }\r\n\r\n    div.appendChild(button);\r\n    div.appendChild(table);\r\n  }\r\n\r\n  displayPossible(state: ReturnType<Game['state']>, div: HTMLElement, expanded = false) {\r\n    const tot = state.totals;\r\n    const details = `${tot.d}/${tot.c}/${tot.b}/${tot.a} (${tot.s})`;\r\n\r\n    const button = makeCollapsible('POSSIBLE', details, 'table');\r\n    const table = document.createElement('table');\r\n    table.classList.add('collapsible-content');\r\n    table.classList.add('results');\r\n    table.classList.add('possible');\r\n\r\n    for (const { word, grade, root, missing, defn } of state.remaining) {\r\n      const tr = document.createElement('tr');\r\n      if (grade < global.SETTINGS.grade) tr.classList.add('hard');\r\n\r\n      let td = document.createElement('td');\r\n      const b = document.createElement('b');\r\n      if (root) {\r\n        const rootSpan = document.createElement('span');\r\n        rootSpan.textContent = root;\r\n        const suffixSpan = document.createElement('span');\r\n        suffixSpan.classList.add('underline');\r\n        suffixSpan.textContent = word.slice(root.length);\r\n        b.appendChild(rootSpan);\r\n        b.appendChild(suffixSpan);\r\n      } else {\r\n        if (missing) b.classList.add('underline');\r\n        b.textContent = word;\r\n      }\r\n      td.appendChild(b);\r\n      tr.appendChild(td);\r\n\r\n      td = document.createElement('td');\r\n      td.textContent = defn;\r\n      tr.appendChild(td);\r\n\r\n      table.appendChild(tr);\r\n    }\r\n\r\n    if (expanded) {\r\n      button.classList.add('active');\r\n      table.style.display = 'table';\r\n    }\r\n\r\n    div.appendChild(button);\r\n    div.appendChild(table);\r\n  }\r\n}\r\n\r\nfunction makeCollapsible(title: string, details: string, display: string, fn?: () => void) {\r\n  const button = document.createElement('button');\r\n  button.setAttribute('type', 'button');\r\n  button.classList.add('collapsible');\r\n\r\n  const div = document.createElement('div');\r\n\r\n  const titleSpan = document.createElement('span');\r\n  titleSpan.classList.add('collapsible-title');\r\n  titleSpan.textContent = title;\r\n\r\n  const detailsSpan = document.createElement('span');\r\n  detailsSpan.classList.add('collapsible-details');\r\n  detailsSpan.textContent = details;\r\n\r\n  div.appendChild(titleSpan);\r\n  div.appendChild(detailsSpan);\r\n  button.appendChild(div);\r\n\r\n  button.addEventListener('click', () => {\r\n    button.classList.toggle('active');\r\n    const content = button.nextElementSibling as HTMLElement;\r\n    if (content.style.display === display) {\r\n      content.style.display = 'none';\r\n    } else {\r\n      if (fn) fn();\r\n      content.style.display = display;\r\n    }\r\n  });\r\n\r\n  return button;\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { define } from '../dict';\r\n\r\nconst VALID = (s: string) =>\r\n  s.split('').every(c => (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\r\n\r\nexport class DefineView implements View {\r\n  private word: string;\r\n\r\n  private define!: HTMLElement;\r\n  private search!: HTMLElement;\r\n\r\n  private defn: HTMLElement | null = null;\r\n  private stats: HTMLElement | null = null;\r\n  private anagrams: HTMLElement | null = null;\r\n\r\n  constructor(json?: { word: string }) {\r\n    this.word = json ? json.word : '';\r\n  }\r\n\r\n  toJSON(): { word: string } {\r\n    return { word: this.word };\r\n  }\r\n\r\n  async attach(word?: string) {\r\n    await Promise.all([global.LOADED.DICT, global.LOADED.STATS()]);\r\n\r\n    if (word) this.word = word;\r\n\r\n    this.define = UI.createElementWithId('div', 'define');\r\n    this.search = UI.createElementWithId('div', 'search');\r\n    this.search.classList.add('word');\r\n    this.search.contentEditable = 'true';\r\n    this.search.textContent = this.word;\r\n    this.search.addEventListener('beforeinput', e => this.onBeforeInput(e));\r\n    this.search.addEventListener('input', () => {\r\n      const w = this.search.textContent;\r\n      this.query(w && VALID(w) ? w : '');\r\n    });\r\n    this.define.appendChild(this.search);\r\n\r\n    this.update();\r\n\r\n    return this.define;\r\n  }\r\n\r\n  afterAttach() {\r\n    UI.permaFocus(this.search);\r\n  }\r\n\r\n  query(w: string) {\r\n    this.search.textContent = w;\r\n    UI.focusContentEditable(this.search);\r\n    this.word = w.toUpperCase();\r\n    this.update();\r\n    UI.persist();\r\n  }\r\n\r\n  detach() {\r\n    this.defn = null;\r\n    this.stats = null;\r\n    this.anagrams = null;\r\n    return this.define;\r\n  }\r\n\r\n  update() {\r\n    const val = global.DICT[this.word];\r\n    if (val) {\r\n      const defn = UI.createElementWithId('div', 'defineDefn');\r\n      defn.classList.add('definition');\r\n      defn.textContent = define(this.word, global.DICT);\r\n      const hard =\r\n        (val.dict && !val.dict.includes(global.SETTINGS.dict.charAt(0))) ||\r\n        this.word.length < global.SETTINGS.min;\r\n      if (hard) {\r\n        this.define.classList.add('hard');\r\n      } else {\r\n        this.define.classList.remove('hard');\r\n      }\r\n\r\n      const addCells = (tr: HTMLTableRowElement, label: string, data: string) => {\r\n        let td = document.createElement('td');\r\n        const b = document.createElement('b');\r\n        b.textContent = label;\r\n        td.appendChild(b);\r\n        tr.appendChild(td);\r\n\r\n        td = document.createElement('td');\r\n        td.classList.add('value');\r\n        td.textContent = data;\r\n        tr.appendChild(td);\r\n      };\r\n\r\n      const s = global.STATS.stats(this.word, global.SETTINGS.dice, global.SETTINGS.dict);\r\n\r\n      const stats = document.createElement('table');\r\n      stats.classList.add('roundedTable');\r\n\r\n      let tr = document.createElement('tr');\r\n      addCells(tr, 'Grade', s.grade === ' ' ? 'S' : s.grade);\r\n      addCells(tr, 'Score', s.word ? String(s.word.p) : '-');\r\n      stats.appendChild(tr);\r\n\r\n      tr = document.createElement('tr');\r\n      addCells(tr, 'Frequency', s.freq ? String(s.freq) : '-');\r\n      addCells(tr, 'Anagram', s.anagram ? String(s.anagram.p) : '-');\r\n      stats.appendChild(tr);\r\n\r\n      stats.appendChild(tr);\r\n\r\n      if (this.defn) this.define.removeChild(this.defn);\r\n      this.define.appendChild(defn);\r\n      this.defn = defn;\r\n\r\n      if (this.stats) this.define.removeChild(this.stats);\r\n      this.define.appendChild(stats);\r\n      this.stats = stats;\r\n    } else {\r\n      if (this.defn) {\r\n        this.define.removeChild(this.defn);\r\n        this.defn = null;\r\n      }\r\n      if (this.stats) {\r\n        this.define.removeChild(this.stats);\r\n        this.stats = null;\r\n      }\r\n    }\r\n\r\n    const anagrams = this.renderAnagrams();\r\n    if (this.anagrams) this.define.removeChild(this.anagrams);\r\n    this.define.appendChild(anagrams);\r\n    this.anagrams = anagrams;\r\n  }\r\n\r\n  renderAnagrams() {\r\n    const div = UI.createElementWithId('div', 'defineAnagrams');\r\n\r\n    const words = global.STATS.anagrams(this.word, global.SETTINGS.dict).words;\r\n    if (words.length <= 1) return div;\r\n\r\n    const solo = [];\r\n    const anadromes = new Set<string>();\r\n\r\n    for (const w of words) {\r\n      // prettier-ignore\r\n      const r = w.split('').reverse().join('');\r\n      if (r !== w && words.includes(r)) {\r\n        anadromes.add(`${[w, r].sort().join(' ')}`);\r\n      } else {\r\n        solo.push(w);\r\n      }\r\n    }\r\n\r\n    const format = (w: string) => {\r\n      const e = document.createElement(w === this.word ? 'b' : 'span');\r\n      e.textContent = w;\r\n      e.addEventListener('click', () => this.query(w));\r\n      return e;\r\n    };\r\n\r\n    for (const pair of anadromes) {\r\n      const [a, b] = pair.split(' ');\r\n      div.appendChild(document.createTextNode(' ('));\r\n      div.appendChild(format(a));\r\n      div.appendChild(document.createTextNode(' '));\r\n      div.appendChild(format(b));\r\n      div.appendChild(document.createTextNode(') '));\r\n    }\r\n\r\n    for (const w of solo) {\r\n      div.appendChild(format(w));\r\n      div.appendChild(document.createTextNode(' '));\r\n    }\r\n\r\n    return div;\r\n  }\r\n\r\n  async onBeforeInput(e: any) {\r\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\r\n    e.preventDefault();\r\n    const enter = ['insertLineBreak', 'insertParagraph'].includes(e.inputType);\r\n    if (enter || (e.data && e.data.includes(' '))) {\r\n      if (this.word) {\r\n        this.query('');\r\n      } else {\r\n        await UI.toggleView('Define');\r\n      }\r\n    }\r\n  }\r\n\r\n  async onKeyDown(e: KeyboardEvent) {\r\n    if (!this.search) return; // not attached\r\n    UI.focusContentEditable(this.search);\r\n    // tslint:disable-next-line: deprecation\r\n    const key = e.keyCode;\r\n    if (key === 13 || key === 32) {\r\n      e.preventDefault();\r\n      if (this.word) {\r\n        this.query('');\r\n      } else {\r\n        await UI.toggleView('Define');\r\n      }\r\n    } else if (key === 27) {\r\n      await UI.toggleView('Define');\r\n    } else if (![0, 37, 39, 8, 46].includes(key) && !VALID(String.fromCharCode(key))) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { UI, View } from './ui';\r\nimport { BoardView } from './board';\r\n\r\nexport class MenuView implements View {\r\n  menu!: HTMLElement;\r\n\r\n  toJSON() {}\r\n\r\n  attach() {\r\n    // NOTE: The id here would make more sense as '#menu', but uBlock's \"Web Annoyances Ultralist\" has:\r\n    // 'github.io###menu, .fixedHeaderContainer, .menu-btn:style(position: absolute !important;)'\r\n    this.menu = UI.createElementWithId('div', 'men');\r\n    const title = UI.createElementWithId('h1', 'title');\r\n    title.textContent = 'BOGGLE';\r\n    title.addEventListener('long-press', async () => {\r\n      const key = (await caches.keys()).find(n => n.includes(':cache:'));\r\n      if (key) await caches.delete(key);\r\n      // tslint:disable-next-line: deprecation\r\n      document.location.reload(true);\r\n    });\r\n    this.menu.appendChild(title);\r\n    const nav = document.createElement('nav');\r\n\r\n    const createButton = (name: string, fn: () => void) => {\r\n      const button = document.createElement('button');\r\n      button.classList.add('toggle');\r\n      button.textContent = name;\r\n      button.addEventListener('click', fn);\r\n      return button;\r\n    };\r\n\r\n    if ((UI.Views.Board as BoardView).game) {\r\n      nav.appendChild(createButton('RESUME', () => UI.toggleView('Board')));\r\n      nav.appendChild(createButton('NEW GAME', () => UI.toggleView('Board', { new: true })));\r\n    } else {\r\n      nav.appendChild(createButton('PLAY', () => UI.toggleView('Board')));\r\n    }\r\n    nav.appendChild(createButton('TRAIN', () => UI.toggleView('Training')));\r\n    nav.appendChild(createButton('DEFINE', () => UI.toggleView('Define')));\r\n    nav.appendChild(createButton('STATS', () => UI.toggleView('Stats')));\r\n    nav.appendChild(createButton('SETTINGS', () => UI.toggleView('Settings')));\r\n\r\n    this.menu.appendChild(nav);\r\n    return this.menu;\r\n  }\r\n\r\n  detach() {\r\n    return this.menu;\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { order } from '../dict';\r\nimport { Store } from '../store';\r\nimport { TrainingStats } from '../training';\r\nimport { TrainingView } from './training';\r\n\r\nexport class ReviewView implements View {\r\n  private readonly training: TrainingView;\r\n\r\n  review!: HTMLElement;\r\n\r\n  constructor(training: TrainingView) {\r\n    this.training = training;\r\n  }\r\n\r\n  toJSON() {}\r\n\r\n  async attach() {\r\n    await this.training.init();\r\n\r\n    this.review = UI.createElementWithId('div', 'review');\r\n\r\n    const back = UI.createBackButton(() => UI.toggleView('Training'));\r\n    this.review.appendChild(UI.createTopbar(back, null, this.training.progress));\r\n\r\n    const d = global.SETTINGS.dice.charAt(0).toLowerCase() as 'n' | 'o' | 'b';\r\n    const score = (k: string) => global.STATS.anagrams(k, global.SETTINGS.dict)[d] || 0;\r\n\r\n    const store = new Store('training', global.SETTINGS.dict);\r\n    const data = ((await store.get('data')) || []) as TrainingStats[];\r\n    const keys = data\r\n      .filter(w => !w.c || w.e < 2.0)\r\n      .sort((a, b) => score(b.k) / b.e - score(a.k) / a.e)\r\n      .map(w => w.k);\r\n\r\n    const wrapper = UI.createElementWithId('div', 'review-results-wrapper');\r\n    if (!keys.length) {\r\n      wrapper.appendChild(UI.createPlaceholder());\r\n    } else {\r\n      for (const k of keys) {\r\n        const table = UI.createElementWithId('table', 'review-results') as HTMLTableElement;\r\n        UI.addAnagramRows(table, order(global.STATS.anagrams(k, global.SETTINGS.dict).words));\r\n        wrapper.appendChild(table);\r\n      }\r\n    }\r\n    this.review.appendChild(wrapper);\r\n\r\n    return this.review;\r\n  }\r\n\r\n  detach() {\r\n    return this.review;\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { Game } from '../game';\r\nimport { Type } from '../dict';\r\nimport { Grade } from '../stats';\r\nimport { Settings, Dice, MinLength, ScoreDisplay, Theme } from '../settings';\r\n\r\n// prettier-ignore\r\nconst CHARS = new Set([\r\n  'B', 'b', 'N', 'n', 'E', 'e', 'C', 'c', 'O', 'o',\r\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n]);\r\nconst VALID = (s: string) => s.split('').every(c => CHARS.has(c));\r\n\r\nexport class SettingsView implements View {\r\n  settings!: HTMLElement;\r\n  seed!: HTMLElement;\r\n\r\n  toJSON() {}\r\n\r\n  attach() {\r\n    this.settings = UI.createElementWithId('div', 'settings');\r\n\r\n    this.seed = UI.createElementWithId('div', 'seed');\r\n    this.seed.textContent = Game.encodeID(global.SETTINGS, global.SEED);\r\n    this.seed.setAttribute('contenteditable', 'true');\r\n    this.seed.addEventListener('input', () => this.onInput(this.seed.textContent || ''));\r\n    this.seed.addEventListener('beforeinput', e => this.onBeforeInput(e));\r\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\r\n    this.settings.appendChild(UI.createTopbar(back, this.seed, null));\r\n\r\n    const checkedRadioRow = (\r\n      k: keyof Settings,\r\n      opts: string[],\r\n      fn: (this: HTMLInputElement) => void,\r\n      id?: string\r\n    ) => {\r\n      const row = document.createElement('div');\r\n      row.classList.add('row');\r\n      const radios = UI.createRadios(\r\n        id || k,\r\n        opts.map(s => (s === String(global.SETTINGS[k]) ? [s] : s)),\r\n        fn\r\n      );\r\n      row.appendChild(radios);\r\n      return row;\r\n    };\r\n\r\n    this.settings.appendChild(\r\n      checkedRadioRow('dice', ['New', 'Old', 'Big'], function(this: HTMLInputElement) {\r\n        const min = this.value === 'Big' ? 4 : 3;\r\n        (document.getElementById(`min${min}`) as HTMLInputElement).checked = true;\r\n        UI.updateSettings({ dice: this.value as Dice, min });\r\n      })\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow('min', ['3', '4', '5'], function(this: HTMLInputElement) {\r\n        UI.updateSettings({ min: Number(this.value) as MinLength });\r\n      })\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow('dict', ['NWL', 'ENABLE', 'CSW'], function(this: HTMLInputElement) {\r\n        UI.updateSettings({ dict: this.value as Type });\r\n      })\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow('grade', ['A', 'B', 'C', 'D'], function(this: HTMLInputElement) {\r\n        UI.updateSettings({ grade: this.value as Exclude<Grade, ' '> });\r\n      })\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow(\r\n        'display',\r\n        ['Hide', 'Show', 'Full'],\r\n        function(this: HTMLInputElement) {\r\n          UI.updateSettings({ display: this.value as ScoreDisplay });\r\n        },\r\n        'scoreDisplay'\r\n      )\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow('theme', ['Light', 'Dark'], function(this: HTMLInputElement) {\r\n        const theme = this.value as Theme;\r\n        UI.updateSettings({ theme });\r\n        UI.setTheme(theme);\r\n      })\r\n    );\r\n    this.settings.appendChild(\r\n      checkedRadioRow('rotate', ['true', 'false'], function(this: HTMLInputElement) {\r\n        const rotate = this.value !== 'false' ;\r\n        UI.updateSettings({ rotate });\r\n      })\r\n    );\r\n\r\n    return this.settings;\r\n  }\r\n\r\n  detach() {\r\n    return this.settings;\r\n  }\r\n\r\n  update() {\r\n    this.seed.textContent = Game.encodeID(global.SETTINGS, global.SEED);\r\n    this.seed.classList.remove('error');\r\n    const set = (id: string) => ((document.getElementById(id) as HTMLInputElement).checked = true);\r\n    set(`dice${global.SETTINGS.dice}`);\r\n    set(`min${global.SETTINGS.min}`);\r\n    set(`dict${global.SETTINGS.dict}`);\r\n    set(`grade${global.SETTINGS.grade}`);\r\n    set(`scoreDisplay${global.SETTINGS.display}`);\r\n    set(`theme${global.SETTINGS.theme || 'Light'}`);\r\n    set(`rotate${global.SETTINGS.rotate || 'true'}`);\r\n  }\r\n\r\n  onInput(id: string) {\r\n    if (!VALID(id)) return;\r\n    const [settings, seed] = Game.decodeID(id);\r\n    if (!UI.valid(settings, seed)) {\r\n      this.seed.classList.add('error');\r\n    } else {\r\n      UI.updateSettings(settings, seed, false);\r\n      this.update();\r\n      UI.focusContentEditable(this.seed);\r\n    }\r\n  }\r\n\r\n  onBeforeInput(e: any) {\r\n    if (e.inputType.startsWith('delete') || (e.data && VALID(e.data))) return;\r\n    e.preventDefault();\r\n  }\r\n\r\n  async onKeyDown(e: KeyboardEvent) {\r\n    if (!this.seed) return; // not attached\r\n    // tslint:disable-next-line: deprecation\r\n    const key = e.keyCode;\r\n    if ([0, 37, 39, 8, 46].includes(key) || VALID(String.fromCharCode(key))) return;\r\n    e.preventDefault();\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { Game } from '../game';\r\nimport { Stats } from '../stats';\r\n\r\ntype Section = 'WORD' | 'ANAGRAM' | 'PAIR';\r\n\r\nexport class StatsView implements View {\r\n  section: Section;\r\n\r\n  stats!: HTMLElement;\r\n  table: HTMLElement | null = null;\r\n\r\n  constructor(json?: { section: Section }) {\r\n    this.section = json ? json.section : 'WORD';\r\n  }\r\n\r\n  toJSON(): { section: Section } {\r\n    return { section: this.section };\r\n  }\r\n\r\n  // TODO: why is there no spinner?\r\n  async attach() {\r\n    await global.LOADED.GAMES();\r\n    // TODO: cache this, invalidate if GAMES/dice/dict/min changes?\r\n    const data = global.STATS.history(global.GAMES!, global.SETTINGS.dice, global.SETTINGS.dict);\r\n\r\n    this.stats = UI.createElementWithId('div', 'stats');\r\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\r\n    const display = (s: Section) => this.display(s, data);\r\n    const radios = UI.createRadios(\r\n      'statsSelect',\r\n      ['WORD', 'ANAGRAM', 'PAIR'].map(s => (s === this.section ? [s] : s)),\r\n      function(this: HTMLInputElement) {\r\n        display(this.value as Section);\r\n        UI.persist();\r\n      }\r\n    );\r\n\r\n    this.stats.appendChild(UI.createTopbar(back, radios, null));\r\n    this.display(this.section, data);\r\n\r\n    return this.stats;\r\n  }\r\n\r\n  detach() {\r\n    this.table = null;\r\n    return this.stats;\r\n  }\r\n\r\n  display(section: Section, data: ReturnType<Stats['history']>) {\r\n    this.section = section;\r\n    const { words, anadromes, anagrams } = data;\r\n\r\n    const link = (w: string) => {\r\n      const b = document.createElement('b');\r\n      b.textContent = w;\r\n      b.addEventListener('click', () => UI.toggleView('Define', w));\r\n      return b;\r\n    };\r\n\r\n    let table = document.createElement('table') as HTMLElement;\r\n    table.classList.add('roundedTable');\r\n    if (section === 'PAIR') {\r\n      if (!anadromes.length) {\r\n        table = UI.createPlaceholder();\r\n      } else {\r\n        for (const { n, fn, d, fd, e } of anadromes) {\r\n          const tr = document.createElement('tr');\r\n\r\n          let td = document.createElement('td');\r\n          td.appendChild(link(n));\r\n          tr.appendChild(td);\r\n\r\n          td = document.createElement('td');\r\n          td.textContent = `${fn}/${fd} (${e})`;\r\n          tr.appendChild(td);\r\n\r\n          td = document.createElement('td');\r\n          td.appendChild(link(d));\r\n          tr.appendChild(td);\r\n\r\n          table.appendChild(tr);\r\n        }\r\n      }\r\n    } else if (section === 'WORD') {\r\n      if (!words.length) {\r\n        table = UI.createPlaceholder();\r\n      } else {\r\n        for (const { w, found, all } of words) {\r\n          const tr = document.createElement('tr');\r\n\r\n          let td = document.createElement('td');\r\n          td.appendChild(link(w));\r\n          tr.appendChild(td);\r\n\r\n          td = document.createElement('td');\r\n          td.textContent = `${found}/${all}`;\r\n          tr.appendChild(td);\r\n\r\n          table.appendChild(tr);\r\n        }\r\n      }\r\n    } else {\r\n      if (!anagrams.length) {\r\n        table = UI.createPlaceholder();\r\n      } else {\r\n        for (const group of anagrams) {\r\n          const tr = document.createElement('tr');\r\n          const td = document.createElement('td');\r\n\r\n          let together = [];\r\n          let wait = false;\r\n          for (const { raw, found, all } of group) {\r\n            const w = raw.replace(/[^A-Z]/, '');\r\n\r\n            if (raw.startsWith('(')) {\r\n              const b = document.createElement('b');\r\n              b.textContent = '(';\r\n              together.push(b);\r\n              wait = true;\r\n            }\r\n\r\n            together.push(link(w));\r\n\r\n            const span = document.createElement('span');\r\n            span.textContent = ` ${found}/${all}`;\r\n\r\n            if (raw.endsWith(')')) {\r\n              together.push(span);\r\n              const b = document.createElement('b');\r\n              b.textContent = ')';\r\n              together.push(b);\r\n              wait = false;\r\n            } else {\r\n              if (wait) span.textContent += ' ';\r\n              together.push(span);\r\n            }\r\n\r\n            if (!wait) {\r\n              for (const e of together) td.appendChild(e);\r\n              td.appendChild(document.createElement('br'));\r\n              together = [];\r\n            }\r\n          }\r\n\r\n          tr.appendChild(td);\r\n          table.appendChild(tr);\r\n        }\r\n      }\r\n    }\r\n    if (this.table) this.stats.removeChild(this.table);\r\n    this.stats.appendChild(table);\r\n    this.table = table;\r\n  }\r\n}\r\n","import { Type, order } from './dict';\r\nimport { Stats } from './stats';\r\nimport { Store } from './store';\r\nimport { Dice } from './settings';\r\nimport { Random } from './random';\r\n\r\nconst PERIOD = 3;\r\nconst DAY = 24 * 60 * 60 * 1000;\r\n\r\ntype Comparator<T> = (a: T, b: T) => number;\r\n\r\nfunction defaultCompare<T>(a: T, b: T) {\r\n  return a < b ? -1 : a > b ? 1 : 0;\r\n}\r\n\r\nclass Queue<T> {\r\n  length: number;\r\n  data: T[];\r\n  compare: Comparator<T>;\r\n\r\n  constructor(data: T[] = [], compare: Comparator<T> = defaultCompare) {\r\n    this.data = data;\r\n    this.length = this.data.length;\r\n    this.compare = compare;\r\n\r\n    if (this.length > 0) {\r\n      for (let i = (this.length >> 1) - 1; i >= 0; i--) this.down(i);\r\n    }\r\n  }\r\n\r\n  push(item: T) {\r\n    this.data.push(item);\r\n    this.length++;\r\n    this.up(this.length - 1);\r\n  }\r\n\r\n  pop(): T | undefined {\r\n    if (this.length === 0) return undefined;\r\n\r\n    const top = this.data[0]!;\r\n    const bottom = this.data.pop()!;\r\n    this.length--;\r\n\r\n    if (this.length > 0) {\r\n      this.data[0] = bottom;\r\n      this.down(0);\r\n    }\r\n\r\n    return top;\r\n  }\r\n\r\n  peek(): T | undefined {\r\n    return this.data[0];\r\n  }\r\n\r\n  private up(pos: number) {\r\n    const item = this.data[pos];\r\n\r\n    while (pos > 0) {\r\n      const parent = (pos - 1) >> 1;\r\n      const current = this.data[parent];\r\n      if (this.compare(item, current) >= 0) break;\r\n      this.data[pos] = current;\r\n      pos = parent;\r\n    }\r\n\r\n    this.data[pos] = item;\r\n  }\r\n\r\n  private down(pos: number) {\r\n    const half = this.length >> 1;\r\n    const item = this.data[pos];\r\n\r\n    while (pos < half) {\r\n      let left = (pos << 1) + 1;\r\n      let best = this.data[left];\r\n      const right = left + 1;\r\n\r\n      if (right < this.length && this.compare(this.data[right], best) < 0) {\r\n        left = right;\r\n        best = this.data[right];\r\n      }\r\n      if (this.compare(best, item) >= 0) break;\r\n\r\n      this.data[pos] = best;\r\n      pos = left;\r\n    }\r\n\r\n    this.data[pos] = item;\r\n  }\r\n}\r\n\r\nexport interface TrainingStats {\r\n  k: string; // key\r\n  e: number; // easiness\r\n  c: number; // correct\r\n  n: number; // encounters\r\n  d: number; // due date\r\n  p: number; // previous\r\n}\r\n\r\nexport class TrainingPool {\r\n  readonly type: Type;\r\n\r\n  private readonly d: 'n' | 'o' | 'b';\r\n  private readonly unlearned: string[];\r\n  private readonly learned: Queue<TrainingStats>;\r\n  private readonly store: Store;\r\n  private readonly stats: Stats;\r\n\r\n  size: number;\r\n\r\n  static async create(stats: Stats, dice: Dice, type: Type, store: Store, min: number) {\r\n    const d = dice.toLowerCase()[0] as 'n' | 'o' | 'b';\r\n    // NOTE: learned is shared across dice...\r\n    const learned = new Queue<TrainingStats>([] /* filled in */, (a, b) => a.d - b.d);\r\n\r\n    const queued = new Set();\r\n    // TODO: store short separately and iterate over depending on min length\r\n    const stored: TrainingStats[] | undefined = await store.get('data');\r\n    if (stored) {\r\n      learned.data = stored;\r\n      learned.length = stored.length;\r\n      for (const s of stored) queued.add(s.k);\r\n    }\r\n\r\n    const raw = [];\r\n    for (const k in stats.mixed) {\r\n      if (!queued.has(k)) {\r\n        const w = stats.anagrams(k, type, min)[d] || 0;\r\n        if (w) raw.push({ k, w });\r\n      }\r\n    }\r\n    raw.sort((a, b) => a.w - b.w);\r\n    const unlearned = raw.map(e => e.k);\r\n\r\n    return new TrainingPool(unlearned, learned, d, type, store, stats);\r\n  }\r\n\r\n  private constructor(\r\n    unlearned: string[],\r\n    learned: Queue<TrainingStats>,\r\n    d: 'n' | 'o' | 'b',\r\n    type: Type,\r\n    store: Store,\r\n    stats: Stats\r\n  ) {\r\n    this.unlearned = unlearned;\r\n    this.learned = learned;\r\n    this.size = learned.length;\r\n    this.d = d;\r\n    this.type = type;\r\n    this.store = store;\r\n    this.stats = stats;\r\n  }\r\n\r\n  overdue() {\r\n    const now = +new Date();\r\n    const popped = [];\r\n    let overdue = this.size === this.learned.length ? 0 : 1;\r\n    for (let next = this.learned.pop(); next; next = this.learned.pop()) {\r\n      popped.push(next);\r\n      if (next.d > now) break;\r\n      overdue++;\r\n    }\r\n    for (const p of popped) this.learned.push(p);\r\n    return overdue;\r\n  }\r\n\r\n  next() {\r\n    const now = +new Date();\r\n    const backfill = () => {\r\n      if (!this.unlearned.length) return undefined;\r\n      return {\r\n        k: this.unlearned.pop()!,\r\n        e: 2.5,\r\n        c: 0,\r\n        n: 0,\r\n        d: 0,\r\n        p: 0,\r\n      };\r\n    };\r\n    // TODO: what about if settings change and group no longer valid (eg. min length)?\r\n    let next: TrainingStats | undefined = this.learned.pop();\r\n    if (next) {\r\n      if (next.d > now) {\r\n        const fill = backfill();\r\n        if (fill) {\r\n          this.learned.push(next);\r\n          next = fill;\r\n        }\r\n      }\r\n    } else {\r\n      next = backfill();\r\n    }\r\n    if (!next) throw new RangeError();\r\n\r\n    let key = next.k;\r\n    const anagrams = this.stats.anagrams(key, this.type);\r\n    const group = anagrams.words;\r\n\r\n    const restore = () => {\r\n      this.learned.push(next!);\r\n      this.size = this.learned.length;\r\n    };\r\n    const update = (q: number) => {\r\n      next = adjust(next!, q, now);\r\n      restore();\r\n      return this.store.set('data', this.learned.data);\r\n    };\r\n\r\n    const random = new Random(next.n);\r\n    // try to find a permutation which isn't in the group\r\n    for (let i = 0; i < 10; i++) {\r\n      key = random.shuffle(key.split('')).join('');\r\n      if (!group.includes(key)) break;\r\n    }\r\n\r\n    return { label: key, group: order(group), update, restore };\r\n  }\r\n}\r\n\r\nfunction adjust(v: TrainingStats, q: number, now: number) {\r\n  // Standard update from SM2: https://www.supermemo.com/en/archives1990-2015/english/ol/sm2\r\n  let mod = -0.8 + 0.28 * q - 0.02 * q * q;\r\n  // During the initial learning phase (n < 5), only apply a fraction of the modifier if negative\r\n  // https://apps.ankiweb.net/docs/manual.html#what-spaced-repetition-algorithm-does-anki-use\r\n  if (mod < 0) mod *= Math.min(Math.pow(2, v.n + 1) * 2.5, 100) / 100;\r\n  // SM2 uses a minimum easiness of 1.3\r\n  const min = 1.3;\r\n\r\n  if (q >= 3) {\r\n    // http://www.blueraja.com/blog/477/a-better-spaced-repetition-learning-algorithm-sm2\r\n    const bonus = v.d ? Math.min(2, (v.d - v.p) / DAY / (v.c ? PERIOD : 1)) : 1;\r\n    v.c++;\r\n    v.e = Math.max(min, v.e + mod * bonus);\r\n    v.d = now + DAY * PERIOD * Math.pow(v.e, v.c - 1) * bonus;\r\n  } else {\r\n    v.c = 0;\r\n    v.e = Math.max(min, v.e + mod);\r\n    v.d = now + DAY;\r\n  }\r\n  v.n++;\r\n  v.p = now;\r\n\r\n  return v;\r\n}\r\n","import { global } from './global';\r\nimport { UI, View } from './ui';\r\nimport { TrainingPool } from '../training';\r\nimport { Store } from '../store';\r\n\r\nconst INTERVAL = 1000;\r\n\r\nexport class TrainingView implements View {\r\n  pool!: TrainingPool;\r\n  train!: HTMLElement;\r\n  content: HTMLElement | null = null;\r\n  restore: (() => void) | null = null;\r\n\r\n  progress!: HTMLElement;\r\n  interval: number | null = null;\r\n\r\n  toJSON() {}\r\n\r\n  async init() {\r\n    await Promise.all([global.LOADED.TRAINING, global.LOADED.DICT, global.LOADED.STATS()]);\r\n    if (!this.pool || this.pool.type !== global.SETTINGS.dict) {\r\n      const store = new Store('training', global.SETTINGS.dict);\r\n      this.pool = await TrainingPool.create(\r\n        global.STATS,\r\n        global.SETTINGS.dice,\r\n        global.SETTINGS.dict,\r\n        store,\r\n        global.SETTINGS.min\r\n      );\r\n    }\r\n    if (!this.progress) {\r\n      this.progress = UI.createElementWithId('div', 'progress');\r\n      this.updateProgress();\r\n      this.interval = setInterval(() => this.updateProgress(), INTERVAL);\r\n    }\r\n  }\r\n\r\n  async attach() {\r\n    await this.init();\r\n    this.train = UI.createElementWithId('div', 'train');\r\n    this.next();\r\n    return this.train;\r\n  }\r\n\r\n  async detach() {\r\n    if (this.restore) await this.restore();\r\n    if (this.interval) clearInterval(this.interval);\r\n    this.content = null;\r\n    return this.train;\r\n  }\r\n\r\n  next() {\r\n    const content = UI.createElementWithId('div', 'content');\r\n\r\n    const { label, group, update, restore } = this.pool.next();\r\n    this.restore = restore;\r\n    const trainWord = document.createElement('div');\r\n    trainWord.classList.add('word');\r\n    trainWord.textContent = label;\r\n\r\n    const sizeHint = UI.createElementWithId('div', 'sizeHint');\r\n    sizeHint.style.visibility = 'hidden';\r\n    sizeHint.textContent = String(group.length);\r\n\r\n    const rating = this.createRatingToggles(update);\r\n    const table = document.createElement('table');\r\n    table.classList.add('results', 'hidden');\r\n    UI.addAnagramRows(table, group);\r\n\r\n    const progress = UI.createElementWithId('div', 'progress-wrapper');\r\n    progress.appendChild(this.progress);\r\n    progress.addEventListener('mouseup', () => UI.toggleView('Review'));\r\n    progress.addEventListener('long-press', () => {\r\n      if (!rating.classList.contains('hidden')) return;\r\n      sizeHint.style.visibility = 'visible';\r\n    });\r\n    progress.addEventListener('long-press-up', () => {\r\n      sizeHint.style.visibility = 'hidden';\r\n    });\r\n\r\n    const back = UI.createBackButton(() => UI.toggleView('Menu'));\r\n    content.appendChild(UI.createTopbar(back, null, progress));\r\n\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('wrapper');\r\n    wrapper.appendChild(trainWord);\r\n    wrapper.appendChild(table);\r\n\r\n    content.appendChild(wrapper);\r\n    content.appendChild(sizeHint);\r\n    const rwrapper = UI.createElementWithId('div', 'rating-wrapper');\r\n    rwrapper.appendChild(rating);\r\n    content.appendChild(rwrapper);\r\n\r\n    const listener = (e: MouseEvent) => {\r\n      if (![back, progress, this.progress].includes(e.target as HTMLElement)) {\r\n        content.removeEventListener('click', listener);\r\n        trainWord.classList.add('hidden');\r\n        sizeHint.classList.add('hidden');\r\n        table.classList.remove('hidden');\r\n        rating.classList.remove('hidden');\r\n      }\r\n    };\r\n    content.addEventListener('click', listener);\r\n\r\n    if (this.content) this.train.removeChild(this.content);\r\n    this.train.appendChild(content);\r\n    this.content = content;\r\n  }\r\n\r\n  createRatingToggles(update: (q: number) => Promise<void>) {\r\n    const toggles = document.createElement('div');\r\n    toggles.setAttribute('id', 'rating');\r\n    toggles.classList.add('toggle-group');\r\n    toggles.classList.add('horizontal');\r\n    toggles.classList.add('hidden');\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      const toggle = document.createElement('button');\r\n      toggle.setAttribute('id', `rating${i}`);\r\n      toggle.setAttribute('type', 'button');\r\n      toggle.classList.add('toggle');\r\n      toggle.textContent = String(i);\r\n\r\n      toggles.appendChild(toggle);\r\n\r\n      toggle.addEventListener('click', async () => {\r\n        await update(Number(toggle.textContent));\r\n        // Update progress before its scheduled interval to ensure there's no perceived lag\r\n        this.updateProgress();\r\n        this.restore = null;\r\n        this.next();\r\n      });\r\n    }\r\n\r\n    return toggles;\r\n  }\r\n\r\n  updateProgress() {\r\n    this.progress.textContent = `${this.pool.overdue()}\\xA0/\\xA0${this.pool.size}`;\r\n  }\r\n}\r\n","import { global } from './global';\r\nimport { Game, GameSettings, GameJSON } from '../game';\r\nimport { Random } from '../random';\r\nimport { Settings, Theme } from '../settings';\r\nimport { define } from '../dict';\r\n\r\nimport { BoardView } from './board';\r\nimport { ScoreView } from './score';\r\nimport { DefineView } from './define';\r\nimport { MenuView } from './menu';\r\nimport { ReviewView } from './review';\r\nimport { SettingsView } from './settings';\r\nimport { StatsView } from './stats';\r\nimport { TrainingView } from './training';\r\n\r\nclass Loader {\r\n  private loader!: HTMLElement;\r\n\r\n  attach() {\r\n    this.loader = UI.createElementWithId('div', 'loader');\r\n    const spinner = UI.createElementWithId('div', 'spinner');\r\n    this.loader.appendChild(spinner);\r\n    return this.loader;\r\n  }\r\n\r\n  detach() {\r\n    return this.loader;\r\n  }\r\n}\r\n\r\nexport interface View {\r\n  toJSON(): any;\r\n  attach(data?: any): HTMLElement | Promise<HTMLElement>;\r\n  detach(next: string): HTMLElement | Promise<HTMLElement>;\r\n  afterAttach?: () => void;\r\n  onKeyDown?: (e: KeyboardEvent) => Promise<void>;\r\n}\r\n\r\nexport const UI = new (class {\r\n  root!: HTMLElement;\r\n  BACK!: HTMLImageElement;\r\n  current!: string;\r\n  previous!: string;\r\n  Views!: { [view: string]: View };\r\n  loader!: Loader;\r\n\r\n  async create() {\r\n    setTimeout(() => window.scrollTo(0, 1), 0);\r\n    // tslint:disable: deprecation\r\n    const mobile =\r\n      typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\r\n    if (mobile) {\r\n      setTimeout(() => {\r\n        const meta = document.querySelector('meta[name=viewport]')!;\r\n        const w = window.innerWidth;\r\n        const h = window.innerHeight;\r\n        meta.setAttribute(\r\n          'content',\r\n          `width=${w}, height=${h}, initial-scale=1, user-scalable=no, minimal-ui`\r\n        );\r\n      }, 200);\r\n    }\r\n\r\n    // If theme has been explicitly set by the user then that trumps the system value\r\n    if (global.SETTINGS.theme !== undefined) {\r\n      this.setTheme(global.SETTINGS.theme);\r\n    } else {\r\n      this.setTheme(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'Dark' : 'Light');\r\n    }\r\n\r\n    this.root = document.getElementById('display')!;\r\n\r\n    const state = JSON.parse(localStorage.getItem('state')!);\r\n    this.current = state ? state.current : 'Menu';\r\n    this.previous = state ? state.previous : 'Menu';\r\n    this.loader = new Loader();\r\n    const VIEWS = {\r\n      Menu: MenuView,\r\n      Board: BoardView,\r\n      Training: TrainingView,\r\n      Define: DefineView,\r\n      Stats: StatsView,\r\n      Settings: SettingsView,\r\n    };\r\n    const views = state ? state.views : {};\r\n    this.Views = {};\r\n    for (const [type, view] of Object.entries(VIEWS)) {\r\n      // @ts-ignore\r\n      this.Views[type] = new view(views[type]);\r\n    }\r\n    this.Views.Review = new ReviewView(this.Views.Training as TrainingView);\r\n    this.Views.Score = new ScoreView(this.Views.Board as BoardView);\r\n\r\n    await this.setup();\r\n\r\n    this.BACK = document.createElement('img');\r\n    this.BACK.src = (document.getElementById('svg') as HTMLImageElement).src;\r\n    this.BACK.height = 20;\r\n\r\n    document.addEventListener('keydown', e => this.onKeyDown(e));\r\n    document.addEventListener('swiped-left', () => this.toggleView('Define'));\r\n    document.addEventListener('swiped-right', () => this.toggleView('Define'));\r\n    window.addEventListener('hashchange', () => this.onHashChange());\r\n    window.addEventListener('beforeunload', () => this.persist());\r\n\r\n    await this.attachView(this.current);\r\n  }\r\n\r\n  persist(previous = false) {\r\n    const state = JSON.parse(localStorage.getItem('state')!) || {};\r\n    state.current = this.current;\r\n    state.previous = this.previous;\r\n    state.views = state.views || {};\r\n    state.views[this.current] = this.Views[this.current];\r\n    if (previous) state.views[this.previous] = this.Views[this.previous];\r\n    localStorage.setItem('state', JSON.stringify(state));\r\n  }\r\n\r\n  async attachView(view: string, data?: any) {\r\n    // console.log(+new Date(), 'ATTACHING', view, data, this.Views[view]);\r\n    this.root.appendChild(this.loader.attach());\r\n    const v = this.Views[view];\r\n    const attached = await v.attach(data);\r\n    this.root.removeChild(this.loader.detach());\r\n    this.root.appendChild(attached);\r\n    if (v.afterAttach) v.afterAttach();\r\n    // console.log(+new Date(), 'ATTACHED', view, data, this.Views[view]);\r\n  }\r\n\r\n  async detachView(view: string, next: string) {\r\n    // console.log(+new Date(), 'DETACHING', view, this.Views[view]);\r\n    this.root.removeChild(await this.Views[view].detach(next));\r\n    // console.log(+new Date(), 'DETACHED', view, this.Views[view]);\r\n  }\r\n\r\n  async toggleView(view: string, data?: any) {\r\n    // console.log('TOGGLE', view, {current: this.current, previous: this.previous});\r\n    if (this.current === view) {\r\n      await this.detachView(view, this.previous);\r\n      this.current = this.previous;\r\n      this.previous = view;\r\n      await this.attachView(this.current, data);\r\n    } else {\r\n      await this.detachView(this.current, view);\r\n      this.previous = this.current;\r\n      this.current = view;\r\n      await this.attachView(view, data);\r\n    }\r\n    this.persist(true);\r\n  }\r\n\r\n  async setup() {\r\n    const setupFromHistory = async () => {\r\n      await global.LOADED.HISTORY;\r\n      if (global.HISTORY.length) {\r\n        const id = global.HISTORY[global.HISTORY.length - 1].seed;\r\n        const [settings] = Game.decodeID(id);\r\n\r\n        const rand = new Random();\r\n        rand.seed = global.SEED;\r\n        rand.next();\r\n\r\n        this.updateSettings(settings, rand.seed % global.MAX_SEED, false);\r\n      }\r\n    };\r\n\r\n    const hash = document.location.hash && document.location.hash.slice(1);\r\n    if (!hash) {\r\n      const existing = (this.Views.Board as BoardView).game;\r\n      if (existing) {\r\n        const [settings, seed] = Game.decodeID((existing as GameJSON).seed);\r\n        this.updateSettings(settings, seed, false);\r\n      } else {\r\n        return setupFromHistory();\r\n      }\r\n    } else {\r\n      const [settings, seed] = Game.decodeID(hash);\r\n      if (!this.valid(settings, seed)) {\r\n        return setupFromHistory();\r\n      }\r\n      this.updateSettings(settings, seed, false);\r\n    }\r\n  }\r\n\r\n  async onKeyDown(e: KeyboardEvent) {\r\n    // tslint:disable-next-line: deprecation\r\n    const key = e.keyCode;\r\n    const currentView = this.Views[this.current];\r\n    if (key === 191 && e.shiftKey) {\r\n      e.preventDefault();\r\n      await this.toggleView('Define');\r\n    } else if ('onKeyDown' in currentView) {\r\n      await currentView.onKeyDown!(e);\r\n    }\r\n  }\r\n\r\n  async onHashChange() {\r\n    if (!document.location.hash) return;\r\n    const [settings, seed] = Game.decodeID(document.location.hash.slice(1));\r\n    if (!this.valid(settings, seed)) return;\r\n\r\n    let refresh = seed !== global.SEED;\r\n    if (!refresh) {\r\n      const s = Object.assign({}, global.SETTINGS);\r\n      refresh = s.dice !== settings.dice || s.min !== settings.min || s.dict !== settings.dict;\r\n    }\r\n    this.updateSettings(settings, seed, false);\r\n\r\n    if (this.current === 'Settings') {\r\n      (this.Views[this.current] as SettingsView).update();\r\n    } else if (refresh && ['Board', 'Score'].includes(this.current)) {\r\n      return (this.Views.Board as BoardView).refresh({ new: true, allowDupes: true });\r\n    }\r\n  }\r\n\r\n  valid(settings: Partial<GameSettings>, seed: number) {\r\n    return !!(\r\n      !isNaN(seed) &&\r\n      Number.isInteger(seed) &&\r\n      seed < global.MAX_SEED &&\r\n      settings.dice &&\r\n      settings.dict &&\r\n      settings.min\r\n    );\r\n  }\r\n\r\n  updateSettings(settings: Partial<Settings>, seed?: number, dom = true) {\r\n    Object.assign(global.SETTINGS, settings);\r\n    localStorage.setItem('settings', JSON.stringify(global.SETTINGS));\r\n    if (typeof seed === 'number') global.SEED = seed;\r\n\r\n    const id = Game.encodeID(global.SETTINGS, global.SEED);\r\n    window.history.replaceState(null, '', `#${id}`);\r\n\r\n    if (dom && this.current === 'Settings') {\r\n      const view = this.Views[this.current] as SettingsView;\r\n      view.seed.textContent = id;\r\n      view.seed.classList.remove('error');\r\n    }\r\n  }\r\n\r\n  createElementWithId(type: string, id: string) {\r\n    const element = document.createElement(type);\r\n    element.setAttribute('id', id);\r\n    return element;\r\n  }\r\n\r\n  createTopbar(left: HTMLElement | null, center: HTMLElement | null, right: HTMLElement | null) {\r\n    const topbar = this.createElementWithId('header', 'topbar');\r\n    topbar.appendChild(left || document.createElement('div'));\r\n    topbar.appendChild(center || document.createElement('div'));\r\n    topbar.appendChild(right || document.createElement('div'));\r\n    return topbar;\r\n  }\r\n\r\n  createBackButton(fn: (e: MouseEvent) => void) {\r\n    const back = this.createElementWithId('div', 'back');\r\n    back.appendChild(this.BACK);\r\n    back.addEventListener('mouseup', fn);\r\n    return back;\r\n  }\r\n\r\n  createPlaceholder() {\r\n    const empty = this.createElementWithId('div', 'empty');\r\n    empty.textContent = '...';\r\n    return empty;\r\n  }\r\n\r\n  focusContentEditable(element: HTMLElement) {\r\n    if (!document.body.contains(element)) return;\r\n    element.focus();\r\n    const range = document.createRange();\r\n    range.selectNodeContents(element);\r\n    range.collapse(false);\r\n    const selection = window.getSelection();\r\n    if (selection) {\r\n      selection.removeAllRanges();\r\n      selection.addRange(range);\r\n    }\r\n  }\r\n\r\n  permaFocus(element: HTMLElement) {\r\n    element.addEventListener('blur', () =>\r\n      setTimeout(() => this.focusContentEditable(element), 20)\r\n    );\r\n    this.focusContentEditable(element);\r\n  }\r\n\r\n  setTheme(theme: Theme) {\r\n    document.documentElement.setAttribute('data-theme', theme.toLowerCase());\r\n  }\r\n\r\n  addAnagramRows(table: HTMLTableElement, group: string[]) {\r\n    for (const r of group) {\r\n      const w = r.replace(/[^A-Z]/, '');\r\n      const tr = document.createElement('tr');\r\n      const grade = global.STATS.stats(w, global.SETTINGS.dice, global.SETTINGS.dict).grade;\r\n      if (grade < global.SETTINGS.grade) tr.classList.add('hard');\r\n\r\n      let td = document.createElement('td');\r\n      const b = document.createElement('b');\r\n      const s = r.startsWith('(') ? `${r}\\xa0` : r.endsWith(')') ? `\\xa0${r}` : `\\xa0${r}\\xa0`;\r\n      b.textContent = `\\xa0${s}\\xa0`;\r\n      td.appendChild(b);\r\n      tr.appendChild(td);\r\n      td = document.createElement('td');\r\n      td.textContent = define(w, global.DICT);\r\n      tr.appendChild(td);\r\n\r\n      table.appendChild(tr);\r\n    }\r\n  }\r\n\r\n  createRadios(id: string, values: Array<string | [string]>, listener: () => void) {\r\n    const radios = this.createElementWithId('span', id);\r\n    radios.classList.add('toggle-group');\r\n    radios.classList.add('horizontal');\r\n    radios.setAttribute('role', 'radiogroup');\r\n    for (let val of values) {\r\n      let checked = false;\r\n      if (Array.isArray(val)) {\r\n        checked = true;\r\n        val = val[0];\r\n      }\r\n\r\n      const radio = this.createElementWithId('input', `${id}${val}`);\r\n      radio.classList.add('hide');\r\n      radio.setAttribute('type', 'radio');\r\n      radio.setAttribute('name', id);\r\n      radio.setAttribute('value', val);\r\n      if (checked) radio.setAttribute('checked', 'checked');\r\n\r\n      const label = document.createElement('label');\r\n      label.classList.add('toggle');\r\n      label.setAttribute('for', `${id}${val}`);\r\n      label.textContent = val.toUpperCase();\r\n\r\n      radio.addEventListener('click', listener.bind(radio));\r\n\r\n      radios.appendChild(radio);\r\n      radios.appendChild(label);\r\n    }\r\n    return radios;\r\n  }\r\n})();\r\n","import { global } from './global';\r\nimport { UI } from './ui';\r\nimport { Store } from '../store';\r\nimport { TrainingPool, TrainingStats } from '../training';\r\nimport { Stats } from '../stats';\r\n\r\nexport const Debug = new (class {\r\n  async backup() {\r\n    const data: any = { history: await global.STORE.get('history') };\r\n    for (const type of ['NWL', 'ENABLE', 'CSW']) {\r\n      const store = new Store('training', type);\r\n      data[type] = await store.get('data');\r\n    }\r\n    data.settings = JSON.parse(localStorage.getItem('settings')!);\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  async restore(data: any) {\r\n    await global.STORE.set('history', data.history);\r\n    for (const type of ['NWL', 'ENABLE', 'CSW']) {\r\n      const store = new Store('training', type);\r\n      await store.set('data', data[type]);\r\n    }\r\n    localStorage.setItem('settings', JSON.stringify(data.settings));\r\n  }\r\n\r\n  async modify(w: string, fn: (s: TrainingStats) => TrainingStats) {\r\n    const store = new Store('training', global.SETTINGS.dict);\r\n    const pool = await TrainingPool.create(\r\n      global.STATS,\r\n      global.SETTINGS.dice,\r\n      global.SETTINGS.dict,\r\n      store,\r\n      global.SETTINGS.min\r\n    );\r\n    const k = Stats.toAnagram(w);\r\n\r\n    let found;\r\n    // @ts-ignore\r\n    const learned = pool.learned;\r\n    const popped = [];\r\n    for (found = learned.pop(); found && found.k !== k; found = learned.pop()) {\r\n      popped.push(found);\r\n    }\r\n    if (!found) throw RangeError();\r\n\r\n    learned.push(fn(found));\r\n    for (const p of popped) learned.push(p);\r\n\r\n    return store.set('data', learned.data);\r\n  }\r\n\r\n  get state() {\r\n    return JSON.parse(localStorage.getItem('state')!);\r\n  }\r\n})();\r\n\r\n// @ts-ignore\r\nwindow.global = global;\r\n// @ts-ignore\r\nwindow.UI = UI;\r\n// @ts-ignore\r\nwindow.Debug = Debug;\r\n","// https://github.com/parcel-bundler/parcel/issues/1762\r\nimport 'regenerator-runtime/runtime';\r\n\r\nimport './swipe';\r\nimport './longpress';\r\nimport './ui/debug';\r\n\r\nimport { UI } from './ui/ui';\r\n\r\n// tslint:disable-next-line:no-floating-promises\r\nUI.create();\r\n"]}