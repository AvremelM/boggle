"use strict";const CACHE="boggle:cache:aabe458f",DATA="boggle::data:7286bac9";self.addEventListener("install",e=>{self.skipWaiting(),e.waitUntil(caches.open(CACHE).then(e=>e.addAll(["android-chrome-192x192.74450bfd.png","android-chrome-512x512.70568378.png","apple-touch-icon.da46de23.png","back.ae8c71bd.svg","favicon.ce6bfe67.ico","index.html","manifest.webmanifest","roboto-400-italic.7778d64e.woff2","roboto-400-italic.814e27c6.woff","roboto-400.9c28f6f8.woff","roboto-400.fc5bb7d7.woff2","roboto-700-italic.1781f5b3.woff2","roboto-700-italic.f4f278f8.woff","roboto-700.22782a3f.woff","roboto-700.d89c9e5f.woff2","src.e393564c.js","src.e393564c.js.map","style.eb204224.css","style.eb204224.css.map","sw.js","sw.js.map"])))}),self.addEventListener("activate",e=>e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e.startsWith("boggle")&&e!==CACHE&&e!==DATA)return caches.delete(e)})))));const writeBack=(e,t)=>caches.open(t).then(async t=>{const s=await t.match(e.request);if(s)return s;const a=await fetch(e.request);return 200===a.status&&t.put(e.request.url,a.clone()),a});self.addEventListener("fetch",e=>{e.request.url.includes("/data/dict.json")||e.request.url.includes("/data/stats.json")?e.respondWith(writeBack(e,DATA)):e.respondWith(writeBack(e,CACHE))});
//# sourceMappingURL=sw.js.map